{"version":3,"sources":["webpack:///./app/global/global.module.js","webpack:///./app/util/util.js","webpack:///./app/global/dialog.service.js","webpack:///./app/main/main.module.js","webpack:///./app/main/app.component.js","webpack:///./app/main/welcome.component.js","webpack:///./app/main/login.component.js","webpack:///./app/main/home.component.js","webpack:///./app/contacts/contacts.module.js","webpack:///./app/prefs/prefs.module.js","webpack:///./app/mymessages/mymessages.module.js","webpack:///./app/bootstrap/bootstrap.js","webpack:///./app/global/appConfig.service.js","webpack:///./app/global/auth.service.js","webpack:///./app/global/dataSources.service.js","webpack:///./app/util/sessionStorage.js","webpack:///./app/global/dialog.directive.js","webpack:///./app/global/loadingIndicator.service.js","webpack:///./app/global/requiresAuth.hook.js","webpack:///./app/global/loadingIndicator.hook.js","webpack:///./app/main/app.states.js","webpack:///./app/contacts/contactDetail.component.js","webpack:///./app/contacts/contactList.component.js","webpack:///./app/contacts/contacts.component.js","webpack:///./app/contacts/contactView.component.js","webpack:///./app/contacts/editContact.component.js","webpack:///./app/contacts/contacts.states.js","webpack:///./app/prefs/prefs.component.js","webpack:///./app/prefs/prefs.states.js","webpack:///./app/mymessages/compose.component.js","webpack:///./app/mymessages/directives/folderList.component.js","webpack:///./app/mymessages/message.component.js","webpack:///./app/mymessages/messageList.component.js","webpack:///./app/mymessages/mymessages.component.js","webpack:///./app/mymessages/directives/messageTable.component.js","webpack:///./app/mymessages/directives/sortMessages.directive.js","webpack:///./app/mymessages/filters/messageBody.filter.js","webpack:///./app/mymessages/services/messagesListUI.service.js","webpack:///./app/mymessages/mymessages.states.js","webpack:///./app/util/ga.js","webpack:///./app/bootstrap/ngmodule.js"],"names":["GLOBAL_MODULE","angular","module","directive","service","run","setProp","obj","key","val","pushToArr","array","item","push","uniqReduce","arr","indexOf","flattenReduce","concat","guidChar","c","Math","floor","random","toString","toUpperCase","guid","split","map","join","DialogService","$document","$compile","$rootScope","body","find","elem","element","confirm","message","details","yesMsg","noMsg","extend","$new","append","data","finally","removeClass","remove","$inject","MAIN_MODULE","config","$uiRouter","trace","enable","$urlService","urlService","rules","otherwise","state","$stateRegistry","stateRegistry","register","component","AuthedController","AppConfig","AuthService","$state","$transitions","LoadingIndicatorService","emailAddress","isAuthenticated","logout","go","reload","isActive","glob","includes","app","controller","template","welcome","LoginController","usernames","credentials","username","password","login","authenticating","returnToOriginalState","returnTo","params","options","showError","errorMessage","authenticate","then","catch","bindings","home","CONTACTS_MODULE","PREFS_MODULE","MYMESSAGES_MODULE","filter","sort","undefined","restDelay","load","fromJson","sessionStorage","getItem","Error","save","setItem","toJson","$q","$timeout","checkCredentials","resolve","reject","validUsername","validPassword","authenticatedUser","Contacts","$http","Folders","Messages","byFolder","folder","searchObject","_id","toFromAttr","search","SessionStorage","sessionStorageKey","sourceUrl","fromSession","_data","_idProp","_eqFn","l","r","JSON","parse","e","console","log","stripHashKey","get","resp","_commit","bind","stringify","all","thenFn","exampleItem","contains","inString","matchesExample","example","Object","keys","reduce","memo","items","id","put","post","eqFn","idx","findIndex","splice","dialog","link","scope","addClass","yes","no","showLoadingIndicator","hideLoadingIndicator","spinner","document","getElementById","parentElement","removeChild","authHookRunBlock","requiresAuthCriteria","to","requiresAuth","redirectToLogin","transition","injector","router","stateService","target","location","onBefore","priority","loadingIndicatorHookRunBlock","onStart","onFinish","appState","name","redirectTo","welcomeState","parent","url","homeState","loginState","$transition$","redirectedFrom","targetState","from","contactsFutureState","lazyLoad","$ocLazyLoad","mod","prefsFutureState","mymessagesFutureState","contactDetail","contact","contactList","contacts","contactView","EditContactController","$onInit","copy","pristineContact","uiCanExit","canExit","equals","question","first","last","editContact","contactsState","deepStateRedirect","sticky","views","viewContactState","contactId","editContactState","newContactState","PrefsController","prefs","reset","clear","savePrefs","prefsState","ComposeController","pristineMessage","$stateParams","gotoPreviousState","hasPrevious","send","date","Date","read","compose","folderList","folders","prefixSubject","prefix","subject","quoteMessage","makeResponseMsg","subjectPrefix","origMsg","MessageController","actions","action","reply","replyMsg","forward","fwdMsg","editDraft","nextMessageId","nextMessageGetter","nextState","messageId","messageList","messages","mymessages","messageTable","columns","messageTableController","colVisible","sortMessages","restrict","attrs","col","chevron","on","evt","$watch","newVal","toggleClass","messageBody","$sce","msgText","trustAsHtml","p","MessageListUI","$filter","proximalMessageId","sorted","msg","proximalIdx","length","mymessagesState","default","messageListState","folderId","messagelist","messageState","composeState","i","s","o","g","a","m","q","arguments","createElement","getElementsByTagName","async","src","parentNode","insertBefore","window","ga","vpv","vpath","path","trans","formattedRoute","$to","format","withSitePrefix","pathname","x","error","err","type","hasOwnProperty","$transitionsProvider","onSuccess","onError","ngmodule","$locationProvider","hashPrefix","plugin"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,wCAAgBC,QAAQC,MAAR,CAAe,QAAf,EAAyB,EAAzB,CAAtB;;AAEPF,cAAcG,SAAd,CAAwB,QAAxB;;AAEAH,cAAcI,OAAd,CAAsB,WAAtB;AACAJ,cAAcI,OAAd,CAAsB,aAAtB;AACAJ,cAAcI,OAAd,CAAsB,UAAtB;AACAJ,cAAcI,OAAd,CAAsB,SAAtB;AACAJ,cAAcI,OAAd,CAAsB,UAAtB;AACAJ,cAAcI,OAAd,CAAsB,eAAtB;AACAJ,cAAcI,OAAd,CAAsB,yBAAtB;;AAEAJ,cAAcK,GAAd;AACAL,cAAcK,GAAd,kD;;;;;;;;;;;;ACtBA;;AAEO,IAAMC,4BAAU,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAmB;AAAEF,MAAIC,GAAJ,IAAWC,GAAX,CAAgB,OAAOF,GAAP;AAAa,CAAlE;AACA,IAAMG,gCAAY,SAAZA,SAAY,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAAED,QAAME,IAAN,CAAWD,IAAX,EAAkB,OAAOD,KAAP;AAAe,CAAtE;AACA,IAAMG,kCAAa,SAAbA,UAAa,CAACC,GAAD,EAAMH,IAAN;AAAA,SAAeG,IAAIC,OAAJ,CAAYJ,IAAZ,MAAsB,CAAC,CAAvB,GAA2BG,GAA3B,GAAiCL,UAAUK,GAAV,EAAeH,IAAf,CAAhD;AAAA,CAAnB;AACA,IAAMK,wCAAgB,SAAhBA,aAAgB,CAACF,GAAD,EAAMH,IAAN;AAAA,SAAeG,IAAIG,MAAJ,CAAWN,IAAX,CAAf;AAAA,CAAtB;AACP,IAAIO,WAAW,SAAXA,QAAW,CAACC,CAAD;AAAA,SAAOA,MAAM,GAAN,IAAaA,MAAM,GAAnB,GAAyB,GAAzB,GAA+BC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,EAAzB,EAA6BC,QAA7B,CAAsC,EAAtC,EAA0CC,WAA1C,EAAtC;AAAA,CAAf;AACO,IAAMC,sBAAO,SAAPA,IAAO;AAAA,SAAM,uCAAuCC,KAAvC,CAA6C,EAA7C,EAAiDC,GAAjD,CAAqDT,QAArD,EAA+DU,IAA/D,CAAoE,EAApE,CAAN;AAAA,CAAb,C;;;;;;;;;;;;;;ACPP;;IAAY5B,O;;;;;;IAEC6B,a,WAAAA,a,GACX,uBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AAAA;;AAC3C,MAAIC,OAAOH,UAAUI,IAAV,CAAe,MAAf,CAAX;AACA,MAAIC,OAAOnC,QAAQoC,OAAR,CAAgB,0CAAhB,CAAX;;AAEA,OAAKC,OAAL,GAAe,UAACC,OAAD,EAAsE;AAAA,QAA5DC,OAA4D,uEAAlD,eAAkD;AAAA,QAAjCC,MAAiC,uEAAxB,KAAwB;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AACnFV,aAASI,IAAT,EAAenC,QAAQ0C,MAAR,CAAeV,WAAWW,IAAX,EAAf,EAAkC,EAACL,gBAAD,EAAUC,gBAAV,EAAmBC,cAAnB,EAA2BC,YAA3B,EAAlC,CAAf;AACAR,SAAKW,MAAL,CAAYT,IAAZ;AACA,WAAOA,KAAKU,IAAL,CAAU,SAAV,EAAqBC,OAArB,CAA6B;AAAA,aAAMX,KAAKY,WAAL,CAAiB,QAAjB,EAA2BC,MAA3B,EAAN;AAAA,KAA7B,CAAP;AACD,GAJD;AAKD,C;;AAEHnB,cAAcoB,OAAd,GAAwB,CAAC,WAAD,EAAc,UAAd,EAA0B,YAA1B,CAAxB,C;;;;;;;;;;;;;;ACdA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMC,oCAAclD,QAAQC,MAAR,CAAe,MAAf,EAAuB,EAAvB,CAApB;;AAEPiD,YAAYC,MAAZ,CAAmB,CAAC,mBAAD,EAAsB,UAASC,SAAT,EAAoB;AAC3D;AACA;AACA;AACAA,YAAUC,KAAV,CAAgBC,MAAhB,CAAuB,CAAvB;;AAEA;AACA,MAAMC,cAAcH,UAAUI,UAA9B;AACAD,cAAYE,KAAZ,CAAkBC,SAAlB,CAA4B,EAAEC,OAAO,SAAT,EAA5B;;AAEA,MAAMC,iBAAiBR,UAAUS,aAAjC;AACAD,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;;AAEAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACD,CAnBkB,CAAnB;;AAqBAZ,YAAYa,SAAZ,CAAsB,KAAtB;AACAb,YAAYa,SAAZ,CAAsB,SAAtB;AACAb,YAAYa,SAAZ,CAAsB,OAAtB;AACAb,YAAYa,SAAZ,CAAsB,MAAtB,c;;;;;;;;;;;;;;;AChCA;;;IAGMC,gB;AACJ,4BAAYC,SAAZ,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4CC,YAA5C,EAA0DC,uBAA1D,EAAmF;AAAA;;AACjF,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA,SAAKG,YAAL,GAAoBL,UAAUK,YAA9B;AACA,SAAKC,eAAL,GAAuBL,YAAYK,eAAZ,EAAvB;AACF;;6BAEAC,M,qBAAS;AAAA,QACFN,WADE,GACqB,IADrB,CACFA,WADE;AAAA,QACWC,MADX,GACqB,IADrB,CACWA,MADX;;AAEPD,gBAAYM,MAAZ;AACA;AACA,WAAOL,OAAOM,EAAP,CAAU,SAAV,EAAqB,EAArB,EAAyB,EAAEC,QAAQ,IAAV,EAAzB,CAAP;AACD,G;;6BAEDC,Q,qBAASC,I,EAAM;AACb,WAAO,KAAKT,MAAL,CAAYU,QAAZ,CAAqBD,IAArB,CAAP;AACD,G;;;;;AAEHZ,iBAAiBf,OAAjB,GAA2B,CAAC,WAAD,EAAc,aAAd,EAA6B,QAA7B,EAAuC,cAAvC,EAAuD,yBAAvD,CAA3B;;AAEA;;;;;;AAMO,IAAM6B,oBAAM;AACjBC,cAAYf,gBADK;AAEjBgB;AAFiB,CAAZ,C;;;;;;;;;;;;AC/BA,IAAMC,4BAAU;AACrBD;AADqB,CAAhB,C;;;;;;;;;;;;;;;;;ACAP;;;;;;IAMME,e,GACJ,yBAAYjB,SAAZ,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4C;AAAA;;AAAA;;AAC1C,OAAKgB,SAAL,GAAiBjB,YAAYiB,SAA7B;;AAEA,OAAKC,WAAL,GAAmB;AACjBC,cAAUpB,UAAUK,YADH;AAEjBgB,cAAU;AAFO,GAAnB;;AAKA,OAAKC,KAAL,GAAa,UAACH,WAAD,EAAiB;AAC5B,UAAKI,cAAL,GAAsB,IAAtB;;AAEA,QAAMC,wBAAwB,SAAxBA,qBAAwB,GAAM;AAClC,UAAI9B,QAAQ,MAAK+B,QAAL,CAAc/B,KAAd,EAAZ;AACA,UAAIgC,SAAS,MAAKD,QAAL,CAAcC,MAAd,EAAb;AACA,UAAIC,UAAU,SAAc,EAAd,EAAkB,MAAKF,QAAL,CAAcE,OAAd,EAAlB,EAA2C,EAAElB,QAAQ,IAAV,EAA3C,CAAd;AACAP,aAAOM,EAAP,CAAUd,KAAV,EAAiBgC,MAAjB,EAAyBC,OAAzB;AACD,KALD;;AAOA,QAAMC,YAAY,SAAZA,SAAY,CAACC,YAAD;AAAA,aACd,MAAKA,YAAL,GAAoBA,YADN;AAAA,KAAlB;;AAGA5B,gBAAY6B,YAAZ,CAAyBX,YAAYC,QAArC,EAA+CD,YAAYE,QAA3D,EACKU,IADL,CACUP,qBADV,EAEKQ,KAFL,CAEWJ,SAFX,EAGK/C,OAHL,CAGa;AAAA,aAAM,MAAK0C,cAAL,GAAsB,KAA5B;AAAA,KAHb;AAID,GAjBD;AAkBD,C;;AAEHN,gBAAgBjC,OAAhB,GAA0B,CAAC,WAAD,EAAc,aAAd,EAA6B,QAA7B,CAA1B;;AAEA;;;;;;AAMO,IAAMsC,wBAAQ;AACnBW,YAAU,EAAER,UAAU,GAAZ,EADS;;AAGnBX,cAAYG,eAHO;;AAKnBF;AALmB,CAAd,C;;;;;;;;;;;;AC3CP;AACA;AACO,IAAMmB,sBAAO;AAClBnB,mhBADkB,EAAb,C;;;;;;;;;;;;;;ACFP;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEO,IAAMoB,4CAAkBpG,QAAQC,MAAR,CAAe,UAAf,EAA2B,EAA3B,CAAxB;;AAEPmG,gBAAgBrC,SAAhB,CAA0B,aAA1B;AACAqC,gBAAgBrC,SAAhB,CAA0B,UAA1B;AACAqC,gBAAgBrC,SAAhB,CAA0B,aAA1B;AACAqC,gBAAgBrC,SAAhB,CAA0B,eAA1B;AACAqC,gBAAgBrC,SAAhB,CAA0B,aAA1B;;AAEAqC,gBAAgBjD,MAAhB,CAAuB,CAAC,wBAAD,EAA2B,UAASS,cAAT,EAAyB;AACzEA,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACD,CALsB,CAAvB,E;;;;;;;;;;;;;;AChBA;;AACA;;AAEO,IAAMuC,sCAAerG,QAAQC,MAAR,CAAe,OAAf,EAAwB,EAAxB,CAArB;;AAEPoG,aAAatC,SAAb,CAAuB,OAAvB;;AAEAsC,aAAalD,MAAb,CAAoB,CAAC,wBAAD,EAA2B,UAAUS,cAAV,EAA0B;AACvEA,iBAAeE,QAAf;AACD,CAFmB,CAApB,E;;;;;;;;;;;;;;ACPA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEO,IAAMwC,gDAAoBtG,QAAQC,MAAR,CAAe,YAAf,EAA6B,EAA7B,CAA1B;;AAEPqG,kBAAkBpG,SAAlB,CAA4B,cAA5B;;AAEAoG,kBAAkBvC,SAAlB,CAA4B,SAA5B;AACAuC,kBAAkBvC,SAAlB,CAA4B,YAA5B;AACAuC,kBAAkBvC,SAAlB,CAA4B,SAA5B;AACAuC,kBAAkBvC,SAAlB,CAA4B,aAA5B;AACAuC,kBAAkBvC,SAAlB,CAA4B,YAA5B;AACAuC,kBAAkBvC,SAAlB,CAA4B,cAA5B;;AAEAuC,kBAAkBC,MAAlB,CAAyB,aAAzB;;AAEAD,kBAAkBnG,OAAlB,CAA0B,eAA1B;;AAEAmG,kBAAkBnD,MAAlB,CAAyB,CAAC,wBAAD,EAA2B,UAASS,cAAT,EAAyB;AAC3EA,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACAF,iBAAeE,QAAf;AACD,CALwB,CAAzB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;AACA;;AACA;;AACA;;AACA;;AAGA,wB;;;;;;;;;;;;;;;AC/BA;;;IAGaG,S,WAAAA,S;AACX,uBAAc;AAAA;;AACZ,SAAKuC,IAAL,GAAY,OAAZ;AACA,SAAKlC,YAAL,GAAoBmC,SAApB;AACA,SAAKC,SAAL,GAAiB,GAAjB;AACA,SAAKC,IAAL;AACD;;sBAEDA,I,mBAAO;AACL,QAAI;AACF,aAAO3G,QAAQ0C,MAAR,CAAe,IAAf,EAAqB1C,QAAQ4G,QAAR,CAAiBC,eAAeC,OAAf,CAAuB,WAAvB,CAAjB,CAArB,CAAP;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc,CAAG;;AAEnB,WAAO,IAAP;AACD,G;;sBAEDC,I,mBAAO;AACLH,mBAAeI,OAAf,CAAuB,WAAvB,EAAoCjH,QAAQkH,MAAR,CAAelH,QAAQ0C,MAAR,CAAe,EAAf,EAAmB,IAAnB,CAAf,CAApC;AACD,G;;;;;;;;;;;;;;;;;;ACrBH;;;IAGawB,W,WAAAA,W;AACX,uBAAYD,SAAZ,EAAuBkD,EAAvB,EAA2BC,QAA3B,EAAqC;AAAA;;AACnC,SAAKnD,SAAL,GAAiBA,SAAjB;AACA,SAAKkD,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKjC,SAAL,GAAiB,CAAC,oBAAD,EAAuB,oBAAvB,EAA6C,oBAA7C,CAAjB;AACD;;AAED;;;;;wBAGAZ,e,8BAAkB;AAChB,WAAO,CAAC,CAAC,KAAKN,SAAL,CAAeK,YAAxB;AACD,G;;AAED;;;;;;;;;;wBAQAyB,Y,yBAAaV,Q,EAAUC,Q,EAAU;AAAA;;AAAA,QACzB8B,QADyB,GACG,IADH,CACzBA,QADyB;AAAA,QACfD,EADe,GACG,IADH,CACfA,EADe;AAAA,QACXlD,SADW,GACG,IADH,CACXA,SADW;;AAG/B;;AACA,QAAMoD,mBAAmB,SAAnBA,gBAAmB;AAAA,aAAMF,GAAG,UAACG,OAAD,EAAUC,MAAV,EAAqB;AACrD,YAAIC,gBAAgB,MAAKrC,SAAL,CAAepE,OAAf,CAAuBsE,QAAvB,MAAqC,CAAC,CAA1D;AACA,YAAIoC,gBAAgBnC,aAAa,UAAjC;;AAEA,eAAQkC,iBAAiBC,aAAlB,GAAmCH,QAAQjC,QAAR,CAAnC,GAAuDkC,OAAO,8BAAP,CAA9D;AACD,OAL8B,CAAN;AAAA,KAAzB;;AAOA,WAAOH,SAASC,gBAAT,EAA2B,GAA3B,EACFrB,IADE,CACG,UAAC0B,iBAAD,EAAuB;AAC3BzD,gBAAUK,YAAV,GAAyBoD,iBAAzB;AACAzD,gBAAU+C,IAAV;AACD,KAJE,CAAP;AAKD,G;;AAED;;;wBACAxC,M,qBAAS;AACP,SAAKP,SAAL,CAAeK,YAAf,GAA8BmC,SAA9B;AACA,SAAKxC,SAAL,CAAe+C,IAAf;AACD,G;;;;;AAEH9C,YAAYjB,OAAZ,GAAsB,CAAC,WAAD,EAAc,IAAd,EAAoB,UAApB,CAAtB,C;;;;;;;;;;;;;;AClDA;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;AAgBA;IACa0E,Q,WAAAA,Q;;;AACX,oBAAYC,KAAZ,EAAmBR,QAAnB,EAA6BD,EAA7B,EAAiClD,SAAjC,EAA4C;AAAA;;AAC1C;AAD0C,4CAE1C,2BAAM2D,KAAN,EAAaR,QAAb,EAAuBD,EAAvB,EAA2B,UAA3B,EAAuC,oBAAvC,EAA6DlD,SAA7D,CAF0C;AAG3C;;;;;AAEH0D,SAAS1E,OAAT,GAAmB,CAAC,OAAD,EAAU,UAAV,EAAsB,IAAtB,EAA4B,WAA5B,CAAnB;;AAEA;;IACa4E,O,WAAAA,O;;;AACX,mBAAYD,KAAZ,EAAmBR,QAAnB,EAA6BD,EAA7B,EAAiClD,SAAjC,EAA4C;AAAA;;AAAA,4CAC1C,4BAAM2D,KAAN,EAAaR,QAAb,EAAuBD,EAAvB,EAA2B,SAA3B,EAAsC,mBAAtC,EAA2DlD,SAA3D,CAD0C;AAE3C;;;;;AAEH4D,QAAQ5E,OAAR,GAAkB,CAAC,OAAD,EAAU,UAAV,EAAsB,IAAtB,EAA4B,WAA5B,CAAlB;;AAEA;;IACa6E,Q,WAAAA,Q;;;AACX,oBAAYF,KAAZ,EAAmBR,QAAnB,EAA6BD,EAA7B,EAAiClD,SAAjC,EAA4C;AAAA;;AAC1C;AAD0C,4CAE1C,4BAAM2D,KAAN,EAAaR,QAAb,EAAuBD,EAAvB,EAA2B,UAA3B,EAAuC,oBAAvC,EAA6DlD,SAA7D,CAF0C;AAG3C;;qBAED8D,Q,qBAASC,M,EAAQ;AACf,QAAIC,eAAe,EAAED,QAAQA,OAAOE,GAAjB,EAAnB;AACA,QAAIC,aAAa,CAAC,QAAD,EAAW,MAAX,EAAmBpH,OAAnB,CAA2BiH,OAAOE,GAAlC,MAA2C,CAAC,CAA5C,GAAgD,MAAhD,GAAyD,IAA1E;AACAD,iBAAaE,UAAb,IAA2B,KAAKlE,SAAL,CAAeK,YAA1C;AACA,WAAO,KAAK8D,MAAL,CAAYH,YAAZ,CAAP;AACD,G;;;;;AAEHH,SAAS7E,OAAT,GAAmB,CAAC,OAAD,EAAU,UAAV,EAAsB,IAAtB,EAA4B,WAA5B,CAAnB,C;;;;;;;;;;;;;;ACjDA;;;;AAEA;;;;;;;;;;;;IAYaoF,c,WAAAA,c;AACX;;;;;;;;;;AAUA,0BAAYT,KAAZ,EAAmBR,QAAnB,EAA6BD,EAA7B,EAAiCmB,iBAAjC,EAAoDC,SAApD,EAA+DtE,SAA/D,EAA0E;AAAA;;AAAA;;AACxE,QAAIpB,aAAJ;AAAA,QAAU2F,cAAc3B,eAAeC,OAAf,CAAuBwB,iBAAvB,CAAxB;AACA;AACA,SAAKG,KAAL,GAAahC,SAAb;;AAEA;AACA,SAAKiC,OAAL,GAAe,KAAf;;AAEA;AACA,SAAKC,KAAL,GAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,EAAE,MAAKF,OAAP,MAAoBG,EAAE,MAAKH,OAAP,CAA9B;AAAA,KAAb;;AAEA;AACA,SAAKvB,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKkB,iBAAL,GAAyBA,iBAAzB;AACA,SAAKrE,SAAL,GAAiBA,SAAjB,CAfwE,CAe5C;;AAE5B,QAAIuE,WAAJ,EAAiB;AACf,UAAI;AACF;AACA3F,eAAOiG,KAAKC,KAAL,CAAWP,WAAX,CAAP;AACD,OAHD,CAGE,OAAOQ,CAAP,EAAU;AACVC,gBAAQC,GAAR,CAAY,2DAAZ;AACD;AACF;;AAED,QAAIC,eAAe,SAAfA,YAAe,CAAC7I,GAAD;AAAA,aACf,mBAAQA,GAAR,EAAa,WAAb,EAA0BmG,SAA1B,CADe;AAAA,KAAnB;;AAGA;AACA,SAAKgC,KAAL,GAAa,CAAC5F,OAAOsE,GAAGG,OAAH,CAAWzE,IAAX,CAAP,GAA0B+E,MAAMwB,GAAN,CAAUb,SAAV,EAAqBvC,IAArB,CAA0B;AAAA,aAAQqD,KAAKxG,IAAb;AAAA,KAA1B,CAA3B,EACRmD,IADQ,CACH,KAAKsD,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CADG,EAERvD,IAFQ,CAEH;AAAA,aAAM8C,KAAKC,KAAL,CAAWlC,eAAeC,OAAf,CAAuBwB,iBAAvB,CAAX,CAAN;AAAA,KAFG,EAGRtC,IAHQ,CAGH;AAAA,aAAStF,MAAMiB,GAAN,CAAUwH,YAAV,CAAT;AAAA,KAHG,CAAb;AAKD;;AAED;;;2BACAG,O,oBAAQzG,I,EAAM;AACZgE,mBAAeI,OAAf,CAAuB,KAAKqB,iBAA5B,EAA+CQ,KAAKU,SAAL,CAAe3G,IAAf,CAA/C;AACA,WAAO,KAAKsE,EAAL,CAAQG,OAAR,CAAgBzE,IAAhB,CAAP;AACD,G;;AAED;;;2BACA4G,G,gBAAIC,M,EAAQ;AAAA;;AACV,WAAO,KAAKtC,QAAL,CAAc;AAAA,aAAM,OAAKqB,KAAX;AAAA,KAAd,EAAgC,KAAKxE,SAAL,CAAeyC,SAA/C,EAA0DV,IAA1D,CAA+D0D,MAA/D,CAAP;AACD,G;;AAED;;;2BACAtB,M,mBAAOuB,W,EAAa;AAClB,QAAIC,WAAW,SAAXA,QAAW,CAACxB,MAAD,EAASyB,QAAT;AAAA,aACX,CAAC,KAAKA,QAAN,EAAgB9I,OAAhB,CAAwB,KAAKqH,MAA7B,MAAyC,CAAC,CAD/B;AAAA,KAAf;AAEA,QAAI0B,iBAAiB,SAAjBA,cAAiB,CAACC,OAAD,EAAUpJ,IAAV;AAAA,aACjBqJ,OAAOC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,CAA4B,UAACC,IAAD,EAAO5J,GAAP;AAAA,eAAe4J,QAAQP,SAASG,QAAQxJ,GAAR,CAAT,EAAuBI,KAAKJ,GAAL,CAAvB,CAAvB;AAAA,OAA5B,EAAsF,IAAtF,CADiB;AAAA,KAArB;AAEA,WAAO,KAAKkJ,GAAL,CAAS;AAAA,aACZW,MAAM7D,MAAN,CAAauD,eAAeP,IAAf,CAAoB,IAApB,EAA0BI,WAA1B,CAAb,CADY;AAAA,KAAT,CAAP;AAED,G;;AAED;;;2BACAP,G,gBAAIiB,E,EAAI;AAAA;;AACN,WAAO,KAAKZ,GAAL,CAAS;AAAA,aACZW,MAAMlI,IAAN,CAAW;AAAA,eAAQvB,KAAK,OAAK+H,OAAV,MAAuB2B,EAA/B;AAAA,OAAX,CADY;AAAA,KAAT,CAAP;AAED,G;;AAED;;;2BACArD,I,iBAAKrG,I,EAAM;AACT,WAAOA,KAAK,KAAK+H,OAAV,IAAqB,KAAK4B,GAAL,CAAS3J,IAAT,CAArB,GAAsC,KAAK4J,IAAL,CAAU5J,IAAV,CAA7C;AACD,G;;AAED;;;2BACA4J,I,iBAAK5J,I,EAAM;AACTA,SAAK,KAAK+H,OAAV,IAAqB,iBAArB;AACA,WAAO,KAAKe,GAAL,CAAS;AAAA,aAAS,qBAAUW,KAAV,EAAiBzJ,IAAjB,CAAT;AAAA,KAAT,EAA0CqF,IAA1C,CAA+C,KAAKsD,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA/C,CAAP;AACD,G;;AAED;;;2BACAe,G,gBAAI3J,I,EAAyB;AAAA;;AAAA,QAAnB6J,IAAmB,uEAAZ,KAAK7B,KAAO;;AAC3B,WAAO,KAAKc,GAAL,CAAS,iBAAS;AACvB,UAAIgB,MAAML,MAAMM,SAAN,CAAgBF,KAAKjB,IAAL,CAAU,IAAV,EAAgB5I,IAAhB,CAAhB,CAAV;AACA,UAAI8J,QAAQ,CAAC,CAAb,EAAgB,MAAM1D,MAASpG,IAAT,6BAAN;AAChByJ,YAAMK,GAAN,IAAa9J,IAAb;AACA,aAAO,OAAK2I,OAAL,CAAac,KAAb,EAAoBpE,IAApB,CAAyB;AAAA,eAAMrF,IAAN;AAAA,OAAzB,CAAP;AACD,KALM,CAAP;AAMD,G;;AAED;;;2BACAqC,M,mBAAOrC,I,EAAyB;AAAA;;AAAA,QAAnB6J,IAAmB,uEAAZ,KAAK7B,KAAO;;AAC9B,WAAO,KAAKc,GAAL,CAAS,iBAAS;AACvB,UAAIgB,MAAML,MAAMM,SAAN,CAAgBF,KAAKjB,IAAL,CAAU,IAAV,EAAgB5I,IAAhB,CAAhB,CAAV;AACA,UAAI8J,QAAQ,CAAC,CAAb,EAAgB,MAAM1D,MAASpG,IAAT,6BAAN;AAChByJ,YAAMO,MAAN,CAAaF,GAAb,EAAkB,CAAlB;AACA,aAAO,OAAKnB,OAAL,CAAac,KAAb,EAAoBpE,IAApB,CAAyB;AAAA,eAAMrF,IAAN;AAAA,OAAzB,CAAP;AACD,KALM,CAAP;AAMD,G;;;;;AAEH0H,eAAepF,OAAf,GAAyB,CAAC,OAAD,EAAU,UAAV,EAAsB,IAAtB,EAA4B,mBAA5B,EAAiD,WAAjD,EAA8D,WAA9D,CAAzB,C;;;;;;;;;;;;QCvHgB2H,M,GAAAA,M;AADhBA,OAAO3H,OAAP,GAAiB,CAAC,UAAD,EAAa,IAAb,CAAjB;AACO,SAAS2H,MAAT,CAAgBxD,QAAhB,EAA0BD,EAA1B,EAA8B;AACnC,SAAO;AACL0D,UAAM,cAACC,KAAD,EAAQ3I,IAAR,EAAiB;AACrBiF,eAAS;AAAA,eAAMjF,KAAK4I,QAAL,CAAc,QAAd,CAAN;AAAA,OAAT;AACA5I,WAAKU,IAAL,CAAU,SAAV,EAAqBsE,GAAG,UAACG,OAAD,EAAUC,MAAV,EAAqB;AAC3CuD,cAAME,GAAN,GAAY;AAAA,iBAAM1D,QAAQ,IAAR,CAAN;AAAA,SAAZ;AACAwD,cAAMG,EAAN,GAAW;AAAA,iBAAM1D,OAAO,KAAP,CAAN;AAAA,SAAX;AACD,OAHoB,CAArB;AAID,KAPI;AAQLvC;AARK,GAAP;AAuBD,C;;;;;;;;;;;;;;;ACzBD;;IAAYhF,O;;;;;;IAECqE,uB,WAAAA,uB,GACX,iCAAYvC,SAAZ,EAAuB;AAAA;;AACrB,MAAIG,OAAOH,UAAUI,IAAV,CAAe,MAAf,CAAX;;AAEA,OAAKgJ,oBAAL,GAA4B,YAAM;AAChCjJ,SAAKW,MAAL,CAAY5C,QAAQoC,OAAR,CAAgB,+FAAhB,CAAZ;AACD,GAFD;;AAIA,OAAK+I,oBAAL,GAA4B,YAAM;AAChC,QAAIC,UAAUC,SAASC,cAAT,CAAwB,SAAxB,CAAd;AACAF,YAAQG,aAAR,CAAsBC,WAAtB,CAAkCJ,OAAlC;AACD,GAHD;AAID,C;;AAEH/G,wBAAwBpB,OAAxB,GAAkC,CAAC,WAAD,EAAc,UAAd,EAA0B,YAA1B,CAAlC,C;;;;;;;;;;;;QCPgBwI,gB,GAAAA,gB;AAThB;;;;;;;;AAQAA,iBAAiBxI,OAAjB,GAA2B,CAAC,cAAD,EAAiB,aAAjB,CAA3B;AACO,SAASwI,gBAAT,CAA0BrH,YAA1B,EAAwCF,WAAxC,EAAqD;AAC1D;AACA,MAAIwH,uBAAuB;AACzBC,QAAI,YAAChI,KAAD;AAAA,aAAWA,MAAMd,IAAN,IAAcc,MAAMd,IAAN,CAAW+I,YAApC;AAAA;AADqB,GAA3B;;AAIA;AACA;;AAEA,MAAIC,kBAAkB,SAAlBA,eAAkB,CAACC,UAAD,EAAgB;AACpC,QAAI5H,cAAc4H,WAAWC,QAAX,GAAsB3C,GAAtB,CAA0B,aAA1B,CAAlB;AACA,QAAIjF,SAAS2H,WAAWE,MAAX,CAAkBC,YAA/B;AACA,QAAI,CAAC/H,YAAYK,eAAZ,EAAL,EAAoC;AAClC,aAAOJ,OAAO+H,MAAP,CAAc,OAAd,EAAuBzF,SAAvB,EAAkC,EAAE0F,UAAU,KAAZ,EAAlC,CAAP;AACD;AACF,GAND;;AAQA;AACA/H,eAAagI,QAAb,CAAsBV,oBAAtB,EAA4CG,eAA5C,EAA6D,EAACQ,UAAU,EAAX,EAA7D;AACD,C;;;;;;;;;;;;QCvBeC,4B,GAAAA,4B;AALhB;;;;AAIAA,6BAA6BrJ,OAA7B,GAAuC,CAAC,cAAD,EAAiB,yBAAjB,CAAvC;AACO,SAASqJ,4BAAT,CAAsClI,YAAtC,EAAoDC,uBAApD,EAA6E;AAClFD,eAAamI,OAAb,CAAsB,CAAE,oBAAF,CAAtB,EAAgDlI,wBAAwB6G,oBAAxE;AACA9G,eAAaoI,QAAb,CAAuB,CAAE,oBAAF,CAAvB,EAAiDnI,wBAAwB8G,oBAAzE;AACD,C;;;;;;;;;;;;;;ACRD;;AACA;;AACA;;AACA;;AAEA;;;;;;;AAOO,IAAMsB,8BAAW;AACtBC,QAAM,KADgB;AAEtBC,cAAY,SAFU;AAGtB5I,aAAW;AAHW,CAAjB;;AAMP;;;;AAIO,IAAM6I,sCAAe;AAC1BC,UAAQ,KADkB;AAE1BH,QAAM,SAFoB;AAG1BI,OAAK,UAHqB;AAI1B/I,aAAW;AAJe,CAArB;;AAQP;;;;;AAKO,IAAMgJ,gCAAY;AACvBF,UAAQ,KADe;AAEvBH,QAAM,MAFiB;AAGvBI,OAAK,OAHkB;AAIvB/I,aAAW;AAJY,CAAlB;;AAQP;;;;;;;AAOO,IAAMiJ,kCAAa;AACxBH,UAAQ,KADgB;AAExBH,QAAM,OAFkB;AAGxBI,OAAK,QAHmB;AAIxB/I,aAAW,OAJa;AAKxBuD,WAAS,EAAE5B,UAAUA,QAAZ;AALe,CAAnB;;AAQP;;;;;;;AAOAA,SAASzC,OAAT,GAAmB,CAAC,cAAD,CAAnB;AACA,SAASyC,QAAT,CAAkBuH,YAAlB,EAAgC;AAC9B,MAAIA,aAAaC,cAAb,MAAiC,IAArC,EAA2C;AACzC;AACA;AACA,WAAOD,aAAaC,cAAb,GAA8BC,WAA9B,EAAP;AACD;;AAED,MAAIhJ,SAAS8I,aAAajB,MAAb,CAAoBC,YAAjC;;AAEA;AACA;AACA,MAAIgB,aAAaG,IAAb,GAAoBV,IAApB,KAA6B,EAAjC,EAAqC;AACnC,WAAOvI,OAAO+H,MAAP,CAAce,aAAaG,IAAb,EAAd,EAAmCH,aAAatH,MAAb,CAAoB,MAApB,CAAnC,CAAP;AACD;;AAED;AACA,SAAOxB,OAAO+H,MAAP,CAAc,MAAd,CAAP;AACD;;AAID;AACO,IAAMmB,oDAAsB;AACjCR,UAAQ,KADyB;AAEjCH,QAAM,aAF2B;AAGjCI,OAAK,WAH4B;AAIjCQ,YAAU,kBAASxB,UAAT,EAAqB;AAC7B,QAAMyB,cAAczB,WAAWC,QAAX,GAAsB3C,GAAtB,CAA0B,aAA1B,CAApB;AACA,WAAO,uFAA6CpD,IAA7C,CAAkD;AAAA,aAAOuH,YAAY5G,IAAZ,CAAiB6G,IAAIpH,eAArB,CAAP;AAAA,KAAlD,CAAP;AACD;AAPgC,CAA5B;;AAUP;AACO,IAAMqH,8CAAmB;AAC9BZ,UAAQ,KADsB;AAE9BH,QAAM,UAFwB;AAG9BI,OAAK,QAHyB;AAI9BQ,YAAU,kBAASxB,UAAT,EAAqB;AAC7B,QAAMyB,cAAczB,WAAWC,QAAX,GAAsB3C,GAAtB,CAA0B,aAA1B,CAApB;AACA,WAAO,uFAAuCpD,IAAvC,CAA4C;AAAA,aAAOuH,YAAY5G,IAAZ,CAAiB6G,IAAInH,YAArB,CAAP;AAAA,KAA5C,CAAP;AACD;AAP6B,CAAzB;;AAUP;AACO,IAAMqH,wDAAwB;AACnCb,UAAQ,KAD2B;AAEnCH,QAAM,eAF6B;AAGnCI,OAAK,aAH8B;AAInCQ,YAAU,kBAASxB,UAAT,EAAqB;AAC7B,QAAMyB,cAAczB,WAAWC,QAAX,GAAsB3C,GAAtB,CAA0B,aAA1B,CAApB;AACA,WAAO,uFAAiDpD,IAAjD,CAAsD;AAAA,aAAOuH,YAAY5G,IAAZ,CAAiB6G,IAAIlH,iBAArB,CAAP;AAAA,KAAtD,CAAP;AACD;AAPkC,CAA9B,C;;;;;;;;;;;;AC9GP;;;AAGO,IAAMqH,wCAAgB;AAC3BzH,YAAU,EAAE0H,SAAS,GAAX,EADiB;;AAG3B5I;AAH2B,CAAtB,C;;;;;;;;;;;;ACHP;;;;;;AAMO,IAAM6I,oCAAc;AACzB3H,YAAU,EAAE4H,UAAU,GAAZ,EADe;;AAGzB9I;AAHyB,CAApB,C;;;;;;;;;;;;ACNP;;;;;;AAMO,IAAM8I,8BAAW;AACtB5H,YAAU,EAAE4H,UAAU,GAAZ,EADY;;AAGtB9I;AAHsB,CAAjB,C;;;;;;;;;;;;ACNP;;;;;;;AAOO,IAAM+I,oCAAc;AACzB7H,YAAU,EAAC0H,SAAS,GAAV,EADe;;AAGzB5I,+vBAHyB,EAApB,C;;;;;;;;;;;;;;;ACPP;;;;;;;;;;;;;;;;;;;;;;;IAuBMgJ,qB;AACJ,iCAAY7J,MAAZ,EAAoBtC,aAApB,EAAmC8F,QAAnC,EAA6C;AAAA;;AAC3C,SAAKxD,MAAL,GAAcA,MAAd;AACA,SAAKtC,aAAL,GAAqBA,aAArB;AACA,SAAK8F,QAAL,GAAgBA,QAAhB;AACD;;kCAEDsG,O,sBAAU;AACR;AACA,SAAKL,OAAL,GAAe5N,QAAQkO,IAAR,CAAa,KAAKC,eAAlB,CAAf;AACD,G;;kCAEDC,S,wBAAY;AACV,QAAI,KAAKC,OAAL,IAAgBrO,QAAQsO,MAAR,CAAe,KAAKV,OAApB,EAA6B,KAAKO,eAAlC,CAApB,EAAwE;AACtE,aAAO,IAAP;AACD;;AAED,QAAI7L,UAAU,2CAAd;AACA,QAAIiM,WAAW,iCAAf;AACA,WAAO,KAAK1M,aAAL,CAAmBQ,OAAnB,CAA2BC,OAA3B,EAAoCiM,QAApC,CAAP;AACD,G;;AAED;;;kCACAvL,M,mBAAO4K,O,EAAS;AAAA;;AACd,SAAK/L,aAAL,CAAmBQ,OAAnB,sBAA8CuL,QAAQlB,IAAR,CAAa8B,KAA3D,SAAoEZ,QAAQlB,IAAR,CAAa+B,IAAjF,EACKzI,IADL,CACU;AAAA,aAAM,MAAK2B,QAAL,CAAc3E,MAAd,CAAqB4K,OAArB,CAAN;AAAA,KADV,EAEK5H,IAFL,CAEU;AAAA,aAAM,MAAKqI,OAAL,GAAe,IAArB;AAAA,KAFV,EAGKrI,IAHL,CAGU;AAAA,aAAM,MAAK7B,MAAL,CAAYM,EAAZ,CAAe,KAAf,EAAsB,IAAtB,EAA4B,EAAEC,QAAQ,IAAV,EAA5B,CAAN;AAAA,KAHV;AAID,G;;AAED;;;kCACAsC,I,iBAAK4G,O,EAAS;AAAA;;AACZ,SAAKjG,QAAL,CAAcX,IAAd,CAAmB4G,OAAnB,EACK5H,IADL,CACU;AAAA,aAAM,OAAKqI,OAAL,GAAe,IAArB;AAAA,KADV,EAEKrI,IAFL,CAEU;AAAA,aAAM,OAAK7B,MAAL,CAAYM,EAAZ,CAAe,GAAf,EAAoB,IAApB,EAA0B,EAAEC,QAAQ,IAAV,EAA1B,CAAN;AAAA,KAFV;AAGD,G;;;;;AAEHsJ,sBAAsB/K,OAAtB,GAAgC,CAAC,QAAD,EAAW,eAAX,EAA4B,UAA5B,CAAhC;;AAEA;;;;;;;;AAQO,IAAMyL,oCAAe;AAC1BxI,YAAU,EAAEiI,iBAAiB,GAAnB,EADgB;;AAG1BpJ,cAAYiJ,qBAHc;;AAK1BhJ,sqDAL0B,EAArB,C;;;;;;;;;;;;;;ACtEP;;AAEA;;;;;;AAMO,IAAM2J,wCAAgB;AAC3B9B,UAAQ,KADmB,EACZ;AACfH,QAAM,UAFqB;AAG3BI,OAAK,WAHsB;AAI3BxF,WAAS;AACP;AACAwG,cAAU,CAAC,UAAD,EAAa,UAACnG,QAAD;AAAA,aAAcA,SAAS8B,GAAT,EAAd;AAAA,KAAb;AAFH,GAJkB;AAQ3B5G,QAAM,EAAE+I,cAAc,IAAhB,EARqB;AAS3BgD,qBAAmB,IATQ;AAU3BC,UAAQ,IAVmB;AAW3BC,SAAO;AACLhB,cAAU;AADL;AAXoB,CAAtB;;AAgBP;;;;AAIO,IAAMiB,8CAAmB;AAC9BrC,QAAM,kBADwB;AAE9BI,OAAK,aAFyB;AAG9BxF,WAAS;AACP;AACA;AACAsG,aAAS,CAAC,UAAD,EAAa,cAAb,EAA6B,UAACjG,QAAD,EAAWsF,YAAX;AAAA,aAA4BtF,SAASyB,GAAT,CAAa6D,aAAatH,MAAb,GAAsBqJ,SAAnC,CAA5B;AAAA,KAA7B;AAHF,GAHqB;AAQ9BjL,aAAW;AARmB,CAAzB;;AAYP;;;;;;;;AAQO,IAAMkL,8CAAmB;AAC9BvC,QAAM,uBADwB;AAE9BI,OAAK,OAFyB;AAG9BgC,SAAO;AACL;AACA;AACA;AACA,oBAAgB;AACd5I,gBAAU,EAAEiI,iBAAiB,SAAnB,EADI;AAEdpK,iBAAW;AAFG;AAJX;AAHuB,CAAzB;;AAcP;;;;;AAKO,IAAMmL,4CAAkB;AAC7BxC,QAAM,cADuB;AAE7BI,OAAK,MAFwB;AAG7B/I,aAAW;AAHkB,CAAxB,C;;;;;;;;;;;;;;;ACnEP;;;IAGMoL,e;AACJ,2BAAYlL,SAAZ,EAAuB;AAAA;;AACrB,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;4BAEDgK,O,sBAAU;AACR,SAAKmB,KAAL,GAAa;AACX1I,iBAAW,KAAKzC,SAAL,CAAeyC;AADf,KAAb;AAGD,G;;AAED;;;4BACA2I,K,oBAAQ;AACNxI,mBAAeyI,KAAf;AACAjE,aAASc,QAAT,CAAkBzH,MAAlB,CAAyB,IAAzB;AACD,G;;AAED;;;4BACA6K,S,wBAAY;AACVvP,YAAQ0C,MAAR,CAAe,KAAKuB,SAApB,EAA+B,EAAEyC,WAAW,KAAK0I,KAAL,CAAW1I,SAAxB,EAA/B,EAAoEM,IAApE;AACAqE,aAASc,QAAT,CAAkBzH,MAAlB,CAAyB,IAAzB;AACD,G;;;;;AAEHyK,gBAAgBlM,OAAhB,GAA0B,CAAC,WAAD,CAA1B;;AAEA;;;AAGO,IAAMmM,wBAAQ;AACnBrK,cAAYoK,eADO;;AAGnBnK,0aAHmB,EAAd,C;;;;;;;;;;;;AC/BP;;;AAGO,IAAMwK,kCAAa;AACxB3C,UAAQ,KADgB;AAExBH,QAAM,OAFkB;AAGxBI,OAAK,QAHmB;AAIxB/I,aAAW,OAJa;AAKxB;AACAlB,QAAM,EAAE+I,cAAc,IAAhB;AANkB,CAAnB,C;;;;;;;;;;;;;;;ACHP;;;IAGM6D,iB;AACJ,6BAAYtL,MAAZ,EAAoBtC,aAApB,EAAmCoC,SAAnC,EAA8C6D,QAA9C,EAAwD;AAAA;;AACtD,SAAK3D,MAAL,GAAcA,MAAd;AACA,SAAKtC,aAAL,GAAqBA,aAArB;AACA,SAAKoC,SAAL,GAAiBA,SAAjB;AACA,SAAK6D,QAAL,GAAgBA,QAAhB;AACD;;AAED;;;;;;;;8BAMAmG,O,sBAAU;AACR,SAAKyB,eAAL,GAAuB1P,QAAQ0C,MAAR,CAAe,EAAC0K,MAAM,KAAKnJ,SAAL,CAAeK,YAAtB,EAAf,EAAoD,KAAKqL,YAAL,CAAkBrN,OAAtE,CAAvB;AACA,SAAKA,OAAL,GAAetC,QAAQkO,IAAR,CAAa,KAAKwB,eAAlB,CAAf;AACD,G;;AAED;;;;;;8BAIAtB,S,wBAAY;AACV,QAAI,KAAKC,OAAL,IAAgBrO,QAAQsO,MAAR,CAAe,KAAKoB,eAApB,EAAqC,KAAKpN,OAA1C,CAApB,EAAwE;AACpE,aAAO,IAAP;AACH;;AAED,QAAIA,UAAU,kCAAd;AACA,QAAIiM,WAAW,iCAAf;AACA,WAAO,KAAK1M,aAAL,CAAmBQ,OAAnB,CAA2BC,OAA3B,EAAoCiM,QAApC,EAA8C,KAA9C,EAAqD,IAArD,CAAP;AACD,G;;AAED;;;;;;;;8BAMAqB,iB,gCAAoB;AAClB,QAAI3C,eAAe,KAAKA,YAAxB;AACA,QAAI4C,cAAc,CAAC,CAAC5C,aAAaG,IAAb,GAAoBV,IAAxC;AACA,QAAI/I,QAAQkM,cAAc5C,aAAaG,IAAb,EAAd,GAAoC,wBAAhD;AACA,QAAIzH,SAASkK,cAAc5C,aAAatH,MAAb,CAAoB,MAApB,CAAd,GAA4C,EAAzD;AACA,SAAKxB,MAAL,CAAYM,EAAZ,CAAed,KAAf,EAAsBgC,MAAtB;AACD,G;;AAED;8BACAmK,I,iBAAKxN,O,EAAS;AAAA;;AACZ,SAAKwF,QAAL,CAAcd,IAAd,CAAmBhH,QAAQ0C,MAAR,CAAeJ,OAAf,EAAwB,EAACyN,MAAM,IAAIC,IAAJ,EAAP,EAAmBC,MAAM,IAAzB,EAA+BjI,QAAQ,MAAvC,EAAxB,CAAnB,EACKhC,IADL,CACU;AAAA,aAAM,MAAKqI,OAAL,GAAe,IAArB;AAAA,KADV,EAEKrI,IAFL,CAEU;AAAA,aAAM,MAAK4J,iBAAL,EAAN;AAAA,KAFV;AAGD,G;;AAED;8BACA5I,I,iBAAK1E,O,EAAS;AAAA;;AACZ,SAAKwF,QAAL,CAAcd,IAAd,CAAmBhH,QAAQ0C,MAAR,CAAeJ,OAAf,EAAwB,EAACyN,MAAM,IAAIC,IAAJ,EAAP,EAAmBC,MAAM,IAAzB,EAA+BjI,QAAQ,QAAvC,EAAxB,CAAnB,EACKhC,IADL,CACU;AAAA,aAAM,OAAKqI,OAAL,GAAe,IAArB;AAAA,KADV,EAEKrI,IAFL,CAEU;AAAA,aAAM,OAAK4J,iBAAL,EAAN;AAAA,KAFV;AAGD,G;;;;;AAEHH,kBAAkBxM,OAAlB,GAA4B,CAAC,QAAD,EAAW,eAAX,EAA4B,WAA5B,EAAyC,UAAzC,CAA5B;;AAEA;;;;;;;;AAQO,IAAMiN,4BAAU;AACrBhK,YAAU,EAAEyJ,cAAc,GAAhB,EAAqB1C,cAAc,GAAnC,EADW;;AAGrBlI,cAAY0K,iBAHS;;AAKrBzK;AALqB,CAAhB,C;;;;;;;;;;;;AC1EP;;;AAGO,IAAMmL,kCAAa;AACxBjK,YAAU,EAACkK,SAAS,GAAV,EADc;;AAGxBpL,qwBAHwB,EAAnB,C;;;;;;;;;;;;;;ACHP;;;;AAEA;AACA,IAAMqL,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAAShO,OAAT;AAAA,SAAqBgO,SAAShO,QAAQiO,OAAtC;AAAA,CAAtB;AACA;AACA,IAAMC,eAAe,SAAfA,YAAe,CAAClO,OAAD;AAAA,wFAMbA,QAAQ8K,IANK,gBAOb9K,QAAQyN,IAPK,mBAQVzN,QAAQiO,OARE,YAUnBjO,QAAQL,IAVW;AAAA,CAArB;;AAYA;AACA,IAAMwO,kBAAkB,SAAlBA,eAAkB,CAACC,aAAD,EAAgBC,OAAhB;AAAA,SAA6B;AACnDvD,UAAMuD,QAAQhF,EADqC;AAEnDA,QAAIgF,QAAQvD,IAFuC;AAGnDmD,aAASF,cAAcK,aAAd,EAA6BC,OAA7B,CAH0C;AAInD1O,UAAMuO,aAAaG,OAAb;AAJ6C,GAA7B;AAAA,CAAxB;;AAQA;;;;IAGMC,iB;AACJ,6BAAYzM,MAAZ,EAAoBtC,aAApB,EAAmCiG,QAAnC,EAA6C;AAAA;;AAC3C,SAAK3D,MAAL,GAAcA,MAAd;AACA,SAAKtC,aAAL,GAAqBA,aAArB;AACA,SAAKiG,QAAL,GAAgBA,QAAhB;AACD;;AAED;;;;;;;8BAKAmG,O,sBAAU;AACR,SAAK3L,OAAL,CAAa2N,IAAb,GAAoB,IAApB;AACA,SAAKnI,QAAL,CAAcwC,GAAd,CAAkB,KAAKhI,OAAvB;;AAEA,SAAKuO,OAAL,GAAe,KAAK7I,MAAL,CAAY6I,OAAZ,CAAoB3G,MAApB,CAA2B,UAAC5J,GAAD,EAAMwQ,MAAN;AAAA,aAAiB,mBAAQxQ,GAAR,EAAawQ,MAAb,EAAqB,IAArB,CAAjB;AAAA,KAA3B,EAAwE,EAAxE,CAAf;AACD,G;;AAED;;;;;8BAGAC,K,kBAAMzO,O,EAAS;AACb,QAAI0O,WAAWP,gBAAgB,MAAhB,EAAwBnO,OAAxB,CAAf;AACA,SAAK6B,MAAL,CAAYM,EAAZ,CAAe,oBAAf,EAAqC,EAAEnC,SAAS0O,QAAX,EAArC;AACD,G;;AAED;;;8BAGAC,O,oBAAQ3O,O,EAAS;AACf,QAAI4O,SAAST,gBAAgB,OAAhB,EAAyBnO,OAAzB,CAAb;AACA,WAAO4O,OAAOvF,EAAd;AACA,SAAKxH,MAAL,CAAYM,EAAZ,CAAe,oBAAf,EAAqC,EAAEnC,SAAS4O,MAAX,EAArC;AACD,G;;AAED;;;8BAGAC,S,sBAAU7O,O,EAAS;AACjB,SAAK6B,MAAL,CAAYM,EAAZ,CAAe,oBAAf,EAAqC,EAAEnC,SAASA,OAAX,EAArC;AACD,G;;AAED;;;;;;;;8BAQAU,M,mBAAOV,O,EAAS;AAAA;;AACd,QAAI8O,gBAAgB,KAAKC,iBAAL,CAAuB/O,QAAQ4F,GAA/B,CAApB;AACA,QAAIoJ,YAAYF,gBAAgB,gCAAhB,GAAmD,wBAAnE;AACA,QAAIzL,SAAS,EAAE4L,WAAWH,aAAb,EAAb;;AAEA,SAAKvP,aAAL,CAAmBQ,OAAnB,CAA2B,SAA3B,EAAsCoE,SAAtC,EACKT,IADL,CACU;AAAA,aAAM,MAAK8B,QAAL,CAAc9E,MAAd,CAAqBV,OAArB,CAAN;AAAA,KADV,EAEK0D,IAFL,CAEU;AAAA,aAAM,MAAK7B,MAAL,CAAYM,EAAZ,CAAe6M,SAAf,EAA0B3L,MAA1B,EAAkC,EAAEjB,QAAQ,wBAAV,EAAlC,CAAN;AAAA,KAFV;AAGD,G;;;;;AAEHkM,kBAAkB3N,OAAlB,GAA4B,CAAC,QAAD,EAAW,eAAX,EAA4B,UAA5B,CAA5B;;AAEA;;;;;;;AAOO,IAAMX,4BAAU;AACrB4D,YAAU,EAAE8B,QAAQ,GAAV,EAAe1F,SAAS,GAAxB,EAA6B+O,mBAAmB,GAAhD,EADW;;AAGrBtM,cAAY6L,iBAHS;;AAKrB5L,04CALqB,EAAhB,C;;;;;;;;;;;;ACnGP;;;AAGO,IAAMwM,oCAAc;AACzBtL,YAAU,EAAE8B,QAAQ,GAAV,EAAeyJ,UAAU,GAAzB,EADe;AAEzBzM,wJAFyB,EAApB,C;;;;;;;;;;;;ACHP;;;;;;;AAOO,IAAM0M,kCAAa;AACxBxL,YAAU,EAACkK,SAAS,GAAV,EADc;;AAGxBpL,kjBAHwB,EAAnB,C;;;;;;;;;;;;ACPP;;;;;;;;;AASO,IAAM2M,sCAAe;AAC1BzL,YAAU,EAAE0L,SAAS,GAAX,EAAgBH,UAAU,GAA1B,EADgB;;AAG1B1M,cAAY8M,sBAHc;;AAK1B7M,isCAL0B,EAArB;;AA+BP6M,uBAAuB5O,OAAvB,GAAiC,CAAC,WAAD,CAAjC;AACA,SAAS4O,sBAAT,CAAgC5N,SAAhC,EAA2C;AAAA;;AACzC,OAAKA,SAAL,GAAiBA,SAAjB;AACA,OAAK6N,UAAL,GAAkB,UAACpF,IAAD;AAAA,WAAU,MAAKkF,OAAL,CAAa7Q,OAAb,CAAqB2L,IAArB,MAA+B,CAAC,CAA1C;AAAA,GAAlB;AACD,C;;;;;;;;;;;;QCxCeqF,Y,GAAAA,Y;AAJhB;;;AAGAA,aAAa9O,OAAb,GAAuB,CAAC,WAAD,CAAvB;AACO,SAAS8O,YAAT,CAAsB9N,SAAtB,EAAiC;AACtC,SAAO;AACL+N,cAAU,GADL;AAELnH,UAAM,cAASC,KAAT,EAAgB3I,IAAhB,EAAsB8P,KAAtB,EAA6B;AACjC,UAAIC,MAAMD,MAAMF,YAAhB;AACA,UAAI,CAACG,GAAL,EAAU;AACV,UAAIC,UAAUnS,QAAQoC,OAAR,CAAgB,iDAAhB,CAAd;AACAD,WAAKS,MAAL,CAAYuP,OAAZ;;AAEAhQ,WAAKiQ,EAAL,CAAQ,OAAR,EAAiB,UAACC,GAAD;AAAA,eAASpO,UAAUuC,IAAV,GAAkBvC,UAAUuC,IAAV,WAAuB0L,GAAxB,SAAqCA,GAArC,SAAiDA,GAA3E;AAAA,OAAjB;AACApH,YAAMwH,MAAN,CAAa;AAAA,eAAMrO,UAAUuC,IAAhB;AAAA,OAAb,EAAmC,UAAC+L,MAAD,EAAY;AAC7CJ,gBAAQK,WAAR,CAAoB,aAApB,EAAmCD,gBAAcL,GAAjD;AACAC,gBAAQK,WAAR,CAAoB,cAApB,EAAoCD,gBAAcL,GAAlD;AACD,OAHD;AAID;AAbI,GAAP;AAeD,C;;;;;;;;;;;;QClBeO,W,GAAAA,W;AAFhB;AACAA,YAAYxP,OAAZ,GAAsB,CAAC,MAAD,CAAtB;AACO,SAASwP,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAO;AAAA,QAACC,OAAD,uEAAW,EAAX;AAAA,WAAkBD,KAAKE,WAAL,CAAiBD,QAAQjR,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwB;AAAA,qBAAWkR,CAAX;AAAA,KAAxB,EAA4CjR,IAA5C,CAAiD,IAAjD,CAAjB,CAAlB;AAAA,GAAP;AACD,C;;;;;;;;;;;;;;;ACJD;IACakR,a,WAAAA,a;AACX,yBAAYC,OAAZ,EAAqB9O,SAArB,EAAgC;AAAA;;AAC9B,SAAK8O,OAAL,GAAeA,OAAf;AACA,SAAK9O,SAAL,GAAiBA,SAAjB;AACD;;AAED;;;0BACA+O,iB,8BAAkBvB,Q,EAAUF,S,EAAW;AACrC,QAAI0B,SAAS,KAAKF,OAAL,CAAa,SAAb,EAAwBtB,QAAxB,EAAkC,KAAKxN,SAAL,CAAeuC,IAAjD,CAAb;AACA,QAAIiE,MAAMwI,OAAOvI,SAAP,CAAiB;AAAA,aAAOwI,IAAIhL,GAAJ,KAAYqJ,SAAnB;AAAA,KAAjB,CAAV;AACA,QAAI4B,cAAcF,OAAOG,MAAP,GAAgB3I,MAAM,CAAtB,GAA0BA,MAAM,CAAhC,GAAoCA,MAAM,CAA5D;AACA,WAAO0I,eAAe,CAAf,GAAmBF,OAAOE,WAAP,EAAoBjL,GAAvC,GAA6CzB,SAApD;AACD,G;;;;;AAEHqM,cAAc7P,OAAd,GAAwB,CAAC,SAAD,EAAY,WAAZ,CAAxB,C;;;;;;;;;;;;ACfA;;;;;;AAMO,IAAMoQ,4CAAkB;AAC7BxG,UAAQ,KADqB;AAE7BH,QAAM,YAFuB;AAG7BI,OAAK,aAHwB;AAI7BxF,WAAS;AACP;AACA8I,aAAS,CAAC,SAAD,EAAY,UAACvI,OAAD;AAAA,aAAaA,QAAQ4B,GAAR,EAAb;AAAA,KAAZ;AAFF,GAJoB;AAQ7BqF,SAAO;AACL4C,gBAAY;AADP,GARsB;AAW7B;AACA7O,QAAM,EAAE+I,cAAc,IAAhB,EAZuB;AAa7B;AACA;AACAgD,qBAAmB;AACjB0E,aAAS,EAAE3P,OAAO,wBAAT;AADQ,GAfU;AAkB7BkL,UAAQ;AAlBqB,CAAxB;;AAsBP;;;AAGO,IAAM0E,8CAAmB;AAC9B7G,QAAM,wBADwB;AAE9BI,OAAK,YAFyB;AAG9B;AACA;AACAnH,UAAQ,EAAC6N,UAAU,OAAX,EALsB;AAM9BlM,WAAS;AACP;AACAU,YAAQ,CAAC,SAAD,EAAY,cAAZ,EAA4B,UAACH,OAAD,EAAU8H,YAAV;AAAA,aAA2B9H,QAAQuB,GAAR,CAAYuG,aAAa6D,QAAzB,CAA3B;AAAA,KAA5B,CAFD;;AAIP;AACA;AACA/B,cAAU,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAC3J,QAAD,EAAWE,MAAX;AAAA,aAAsBF,SAASC,QAAT,CAAkBC,MAAlB,CAAtB;AAAA,KAAvB;AANH,GANqB;AAc9B8G,SAAO;AACL;AACA2E,iBAAa;AAFR;AAduB,CAAzB;;AAqBP;;;;AAIO,IAAMC,sCAAe;AAC1BhH,QAAM,gCADoB;AAE1BI,OAAK,aAFqB;AAG1BxF,WAAS;AACP;AACAhF,aAAS,CAAC,UAAD,EAAa,cAAb,EAA6B,UAACwF,QAAD,EAAW6H,YAAX;AAAA,aAA4B7H,SAASsB,GAAT,CAAauG,aAAa4B,SAA1B,CAA5B;AAAA,KAA7B,CAFF;AAGP;AACAF,uBAAmB,CAAC,eAAD,EAAkB,UAAlB,EAA8B,UAACyB,aAAD,EAAgBrB,QAAhB;AAAA,aAA6BqB,cAAcE,iBAAd,CAAgCzJ,IAAhC,CAAqCuJ,aAArC,EAAoDrB,QAApD,CAA7B;AAAA,KAA9B;AAJZ,GAHiB;AAS1B3C,SAAO;AACL;AACA;AACA;AACA,0BAAsB;AAJjB;AATmB,CAArB;;AAkBP;;;;;;AAMO,IAAM6E,sCAAe;AAC1BjH,QAAM,oBADoB;AAE1BI,OAAK,UAFqB;AAG1B;AACA;AACAnH,UAAQ;AACNrD,aAAS;AADH,GALkB;AAQ1BwM,SAAO;AACL;AACA;AACA,4BAAwB;AAHnB;AARmB,CAArB,C;;;;;;;;;AChFP;;AAEA;;AAEA,CAAC,UAAS8E,CAAT,EAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiBlL,CAAjB,EAAmBmL,CAAnB,EAAqBC,CAArB,EAAuB;AAACL,IAAE,uBAAF,IAA2B/K,CAA3B,CAA6B+K,EAAE/K,CAAF,IAAK+K,EAAE/K,CAAF,KAAM,YAAU;AACrE,KAAC+K,EAAE/K,CAAF,EAAKqL,CAAL,GAAON,EAAE/K,CAAF,EAAKqL,CAAL,IAAQ,EAAhB,EAAoBtT,IAApB,CAAyBuT,SAAzB;AAAoC,GADY,EACXP,EAAE/K,CAAF,EAAKD,CAAL,GAAO,IAAE,IAAIoH,IAAJ,EADE,CACSgE,IAAEH,EAAEO,aAAF,CAAgBN,CAAhB,CAAF,EAC3DG,IAAEJ,EAAEQ,oBAAF,CAAuBP,CAAvB,EAA0B,CAA1B,CADyD,CAC5BE,EAAEM,KAAF,GAAQ,CAAR,CAAUN,EAAEO,GAAF,GAAMR,CAAN,CAAQE,EAAEO,UAAF,CAAaC,YAAb,CAA0BT,CAA1B,EAA4BC,CAA5B;AACpD,CAHD,EAGGS,MAHH,EAGUrJ,QAHV,EAGmB,QAHnB,EAG4B,yCAH5B,EAGsE,IAHtE;;AAKAsJ,GAAG,QAAH,EAAa,eAAb,EAA8B,MAA9B;AACAA,GAAG,MAAH,EAAW,UAAX;;AAGA,mBAASxR,MAAT,CAAgB,CAAC,sBAAD,EAAyB,gCAAwB;AAC/D,MAAMyR,MAAM,SAANA,GAAM,CAACC,KAAD;AAAA,WACRH,OAAO,IAAP,EAAa,MAAb,EAAqB,UAArB,EAAiCG,KAAjC,CADQ;AAAA,GAAZ;;AAGA,MAAMC,OAAO,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,QAAMC,iBAAiBD,MAAME,GAAN,GAAYnI,GAAZ,CAAgBoI,MAAhB,CAAuBH,MAAMpP,MAAN,EAAvB,CAAvB;AACA,QAAMwP,iBAAiBhJ,SAASiJ,QAAT,GAAoBJ,cAA3C;AACA,iBAAWG,eAAezT,KAAf,CAAqB,GAArB,EAA0B6E,MAA1B,CAAiC;AAAA,aAAK8O,CAAL;AAAA,KAAjC,EAAyCzT,IAAzC,CAA8C,GAA9C,CAAX;AACD,GAJD;;AAMA,MAAM0T,QAAQ,SAARA,KAAQ,CAACP,KAAD,EAAW;AACvB,QAAMQ,MAAMR,MAAMO,KAAN,EAAZ;AACA,QAAME,OAAOD,OAAOA,IAAIE,cAAJ,CAAmB,MAAnB,CAAP,GAAoCF,IAAIC,IAAxC,GAA+C,GAA5D;AACA,QAAMlT,UAAUiT,OAAOA,IAAIE,cAAJ,CAAmB,SAAnB,CAAP,GAAuCF,IAAIjT,OAA3C,GAAqD,GAArE;AACAsS,QAAIE,KAAKC,KAAL,IAAc,aAAd,GAA8BS,IAA9B,GAAqC,gBAArC,GAAwDlT,OAA5D;AACD,GALD;;AAOAoT,uBAAqBC,SAArB,CAA+B,EAA/B,EAAmC,UAACZ,KAAD;AAAA,WAAWH,IAAIE,KAAKC,KAAL,CAAJ,CAAX;AAAA,GAAnC,EAAgE,EAAE1I,UAAU,CAAC,KAAb,EAAhE;AACAqJ,uBAAqBE,OAArB,CAA6B,EAA7B,EAAiC,UAACb,KAAD;AAAA,WAAWO,MAAMP,KAAN,CAAX;AAAA,GAAjC,EAA0D,EAAE1I,UAAU,CAAC,KAAb,EAA1D;AACD,CAnBe,CAAhB,E;;;;;;;;;;;;;;ACRA;;IAAYrM,O;;AACZ;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AAlBA;;;;AAIA;AAeO,IAAM6V,8BAAW7V,QAAQC,MAAR,CAAe,MAAf,EAAuB,4CAG7C,kBAAYyM,IAHiC,EAI7C,sBAAcA,IAJ+B;;AAM7C;AACA;AACA;AACA;AATsB,CAAjB;;AAYPmJ,SAAS1S,MAAT,CAAgB,CAAC,mBAAD,EAAsB,mBAAtB,EAA2C,UAACC,SAAD,EAAY0S,iBAAZ,EAAkC;AAC3FA,oBAAkBC,UAAlB,CAA6B,EAA7B;AACA3S,YAAU4S,MAAV;AACA5S,YAAU4S,MAAV;AACA;AACA,8BAAW5S,SAAX;AACD,CANe,CAAhB,E","file":"sampleapp.js","sourcesContent":["import {AppConfig} from \"./appConfig.service\";\nimport {AuthService} from \"./auth.service\";\nimport {Contacts, Folders, Messages} from \"./dataSources.service\";\nimport {dialog} from \"./dialog.directive\";\nimport {DialogService} from \"./dialog.service\";\nimport {LoadingIndicatorService} from \"./loadingIndicator.service\";\nimport {authHookRunBlock} from \"./requiresAuth.hook\";\nimport {loadingIndicatorHookRunBlock} from \"./loadingIndicator.hook\";\n\nexport const GLOBAL_MODULE = angular.module('global', []);\n\nGLOBAL_MODULE.directive('dialog', dialog);\n\nGLOBAL_MODULE.service('AppConfig', AppConfig);\nGLOBAL_MODULE.service('AuthService', AuthService);\nGLOBAL_MODULE.service('Contacts', Contacts);\nGLOBAL_MODULE.service('Folders', Folders);\nGLOBAL_MODULE.service('Messages', Messages);\nGLOBAL_MODULE.service('DialogService', DialogService);\nGLOBAL_MODULE.service('LoadingIndicatorService', LoadingIndicatorService);\n\nGLOBAL_MODULE.run(authHookRunBlock);\nGLOBAL_MODULE.run(loadingIndicatorHookRunBlock);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/global.module.js","/** Some utility functions used by the application */\n\nexport const setProp = (obj, key, val) => { obj[key] = val; return obj; };\nexport const pushToArr = (array, item) => { array.push(item); return array; };\nexport const uniqReduce = (arr, item) => arr.indexOf(item) !== -1 ? arr : pushToArr(arr, item);\nexport const flattenReduce = (arr, item) => arr.concat(item);\nlet guidChar = (c) => c !== 'x' && c !== 'y' ? '-' : Math.floor(Math.random()*16).toString(16).toUpperCase();\nexport const guid = () => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\").map(guidChar).join(\"\");\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/util.js","import * as angular from \"angular\";\n\nexport class DialogService {\n  constructor($document, $compile, $rootScope) {\n    let body = $document.find(\"body\");\n    let elem = angular.element(\"<div class='dialog' dialog='opts'></div>\");\n\n    this.confirm = (message, details = \"Are you sure?\", yesMsg = \"Yes\", noMsg = \"No\") => {\n      $compile(elem)(angular.extend($rootScope.$new(), {message, details, yesMsg, noMsg}));\n      body.append(elem);\n      return elem.data(\"promise\").finally(() => elem.removeClass('active').remove());\n    }\n  }\n}\nDialogService.$inject = ['$document', '$compile', '$rootScope'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.service.js","import {app} from \"./app.component\";\nimport {welcome} from \"./welcome.component\";\nimport {login} from \"./login.component\";\nimport {home} from \"./home.component\";\nimport {appState, homeState, loginState, welcomeState, contactsFutureState, prefsFutureState, mymessagesFutureState} from \"./app.states\";\n\nexport const MAIN_MODULE = angular.module('main', []);\n\nMAIN_MODULE.config(['$uiRouterProvider', function($uiRouter) {\n  // Enable tracing of each TRANSITION... (check the javascript console)\n  // This syntax `$trace.enable(1)` is an alternative to `$trace.enable(\"TRANSITION\")`.\n  // Besides \"TRANSITION\", you can also enable tracing for : \"RESOLVE\", \"HOOK\", \"INVOKE\", \"UIVIEW\", \"VIEWCONFIG\"\n  $uiRouter.trace.enable(1);\n\n  // If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\n  const $urlService = $uiRouter.urlService;\n  $urlService.rules.otherwise({ state: 'welcome' });\n\n  const $stateRegistry = $uiRouter.stateRegistry;\n  $stateRegistry.register(appState);\n  $stateRegistry.register(homeState);\n  $stateRegistry.register(loginState);\n  $stateRegistry.register(welcomeState);\n\n  $stateRegistry.register(contactsFutureState);\n  $stateRegistry.register(prefsFutureState);\n  $stateRegistry.register(mymessagesFutureState);\n}]);\n\nMAIN_MODULE.component('app', app);\nMAIN_MODULE.component('welcome', welcome);\nMAIN_MODULE.component('login', login);\nMAIN_MODULE.component('home', home);\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/main.module.js","/**\n * The controller for the `app` component.\n */\nclass AuthedController {\n  constructor(AppConfig, AuthService, $state, $transitions, LoadingIndicatorService) {\n    this.AuthService = AuthService;\n    this.$state = $state;\n\n    this.emailAddress = AppConfig.emailAddress;\n    this.isAuthenticated = AuthService.isAuthenticated();\n }\n\n  logout() {\n    let {AuthService, $state} = this;\n    AuthService.logout();\n    // Reload states after authentication change\n    return $state.go('welcome', {}, { reload: true });\n  }\n\n  isActive(glob) {\n    return this.$state.includes(glob);\n  }\n}\nAuthedController.$inject = ['AppConfig', 'AuthService', '$state', '$transitions', 'LoadingIndicatorService'];\n\n/**\n * This is the main app component for an authenticated user.\n * \n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `ui-view` viewport for nested states to fill in.\n */\nexport const app = {\n  controller: AuthedController,\n  template: `\n    <div class=\"navheader\">\n      <ul ng-if=\"::$ctrl.isAuthenticated\" class=\"nav nav-tabs\">\n    \n        <li ui-sref-active=\"active\"> <a ui-sref=\"mymessages\" role=\"button\"> Messages </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"contacts\" role=\"button\"> Contacts </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"prefs\" role=\"button\"> Preferences </a> </li>\n    \n        <li class=\"navbar-right\">\n          <button class=\"btn btn-primary fa fa-home\" ui-sref=\"home\"></button>\n          <button style=\"margin-right: 15px;\" class=\"btn btn-primary\" ui-sref=\"mymessages.compose\"><i class=\"fa fa-envelope\"></i> New Message</button>\n        </li>\n    \n        <li class=\"navbar-text navbar-right logged-in-user\" style=\"margin: 0.5em 1.5em;\">\n          <div>\n            {{::$ctrl.emailAddress}} <i class=\"fa fa-chevron-down\"></i>\n            <div class=\"hoverdrop\">\n              <button class=\"btn btn-primary\" ng-click=\"$ctrl.logout()\">Log Out</button>\n            </div>\n          </div>\n        </li>\n    \n      </ul>\n    </div>\n    \n    <div ui-view></div>\n    <div ui-view=\"mymessages\" ng-show=\"$ctrl.isActive('mymessages.**')\"></div>\n    <div ui-view=\"contacts\" ng-show=\"$ctrl.isActive('contacts.**')\"></div>\n`\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/app.component.js","export const welcome = {\n  template: `\n    <div class=\"container-fluid\">\n    \n      <h3>UI-Router Sample App</h3>\n    \n      <p>Welcome to the sample app!</p>\n      <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\n        These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\n        to show the tree of states, and a transition log visualizer.</p>\n    \n      <h4>App Overview</h4>\n      <p>\n        First, start exploring the application's functionality at a high level by activating\n        one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\n        you will be taken to an authentication screen (the authentication is fake; the password is \"password\")\n        <div>\n          <button class=\"btn btn-primary\" ui-sref=\"mymessages\"><i class=\"fa fa-envelope\"></i><span>Messages</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"contacts\"><i class=\"fa fa-users\"></i><span>Contacts</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"prefs\"><i class=\"fa fa-cogs\"></i><span>Preferences</span></button>\n        </div>\n      </p>\n    \n      <h4>Patterns and Recipes</h4>\n      <ul>\n        <li>Require Authentication</li>\n        <li>Previous State</li>\n        <li>Redirect Hook</li>\n        <li>Default Param Values</li>\n      </ul>\n    </div>`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/welcome.component.js","/**\n * The controller for the `login` component\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nclass LoginController {\n  constructor(AppConfig, AuthService, $state) {\n    this.usernames = AuthService.usernames;\n\n    this.credentials = {\n      username: AppConfig.emailAddress,\n      password: 'password'\n    };\n\n    this.login = (credentials) => {\n      this.authenticating = true;\n\n      const returnToOriginalState = () => {\n        let state = this.returnTo.state();\n        let params = this.returnTo.params();\n        let options = Object.assign({}, this.returnTo.options(), { reload: true });\n        $state.go(state, params, options);\n      };\n\n      const showError = (errorMessage) =>\n          this.errorMessage = errorMessage;\n\n      AuthService.authenticate(credentials.username, credentials.password)\n          .then(returnToOriginalState)\n          .catch(showError)\n          .finally(() => this.authenticating = false);\n    }\n  }\n}\nLoginController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n */\nexport const login = {\n  bindings: { returnTo: '<' },\n\n  controller: LoginController,\n\n  template:  `\n    <div class=\"container\">\n      <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\n        <h3>Log In</h3>\n        <p>(This login screen is for demonstration only... just pick a username, enter 'password' and click <b>\"Log in\"</b>)</p>\n        <hr>\n    \n        <div>\n          <label for=\"username\">Username:</label>\n          <select class=\"form-control\" name=\"username\" id=\"username\"\n            ng-model=\"$ctrl.credentials.username\" ng-options=\"username for username in $ctrl.usernames\"></select>\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 10em; height: 0\"\n              ng-hide=\"$ctrl.credentials.username\" class=\"fa fa-arrow-left bounce-horizontal\"> Choose </i>\n        </div>\n        <br>\n    \n        <div>\n          <label for=\"password\">Password:</label>\n          <input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\n              ng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == 'password'\" class=\"fa fa-arrow-left bounce-horizontal\">\n            Enter '<b>password</b>' here\n          </i>\n        </div>\n    \n        <div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\n    \n        <hr>\n        <div>\n          <button class=\"btn btn-primary\" type=\"button\"\n              ng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\n            <i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\n          </button>\n          <i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == 'password'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\n      </div>\n    </div>\n    `\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/login.component.js","// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\nexport const home = {\n  template: `\n    <div class=\"home buttons\">\n      <button ui-sref=\"mymessages\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-envelope\"></i></h1>\n        <h1>Messages</h1>\n      </button>\n\n      <button ui-sref=\"contacts\" class=\"btn btn-primary\">\n      <h1><i class=\"fa fa-users\"></i></h1>\n      <h1>Contacts</h1>\n      </button>\n\n      <button ui-sref=\"prefs\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-cogs\"></i></h1>\n        <h1>Preferences</h1>\n      </button>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/home.component.js","import {contactDetail} from \"./contactDetail.component\";\nimport {contactList} from \"./contactList.component\";\nimport {contacts} from \"./contacts.component\";\nimport {contactView} from \"./contactView.component\";\nimport {editContact} from \"./editContact.component\";\n\nimport {contactsState, editContactState, newContactState, viewContactState} from \"./contacts.states\";\n\nexport const CONTACTS_MODULE = angular.module('contacts', []);\n\nCONTACTS_MODULE.component('contactView', contactView);\nCONTACTS_MODULE.component('contacts', contacts);\nCONTACTS_MODULE.component('editContact', editContact);\nCONTACTS_MODULE.component('contactDetail', contactDetail);\nCONTACTS_MODULE.component('contactList', contactList);\n\nCONTACTS_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(contactsState);\n  $stateRegistry.register(newContactState);\n  $stateRegistry.register(viewContactState);\n  $stateRegistry.register(editContactState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.module.js","import {prefs} from \"./prefs.component\";\nimport {prefsState} from \"./prefs.states\";\n\nexport const PREFS_MODULE = angular.module('prefs', []);\n\nPREFS_MODULE.component('prefs', prefs);\n\nPREFS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(prefsState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.module.js","import {compose} from \"./compose.component\";\nimport {folderList} from \"./directives/folderList.component\";\nimport {message} from \"./message.component\";\nimport {messageList} from \"./messageList.component\";\nimport {mymessages} from \"./mymessages.component\";\nimport {messageTable} from \"./directives/messageTable.component\";\nimport {sortMessages} from \"./directives/sortMessages.directive\";\nimport {messageBody} from \"./filters/messageBody.filter\";\nimport {MessageListUI} from \"./services/messagesListUI.service\";\n\nimport {composeState, messageState, messageListState, mymessagesState} from \"./mymessages.states\";\n\nexport const MYMESSAGES_MODULE = angular.module('mymessages', []);\n\nMYMESSAGES_MODULE.directive('sortMessages', sortMessages);\n\nMYMESSAGES_MODULE.component('compose', compose);\nMYMESSAGES_MODULE.component('folderList', folderList);\nMYMESSAGES_MODULE.component('message', message);\nMYMESSAGES_MODULE.component('messageList', messageList);\nMYMESSAGES_MODULE.component('mymessages', mymessages);\nMYMESSAGES_MODULE.component('messageTable', messageTable);\n\nMYMESSAGES_MODULE.filter('messageBody', messageBody);\n\nMYMESSAGES_MODULE.service('MessageListUI', MessageListUI);\n\nMYMESSAGES_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(composeState);\n  $stateRegistry.register(messageState);\n  $stateRegistry.register(messageListState);\n  $stateRegistry.register(mymessagesState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.module.js","/**\n * This file is the main entry point for the entire app.\n *\n * If the application is being bundled, this is where the bundling process\n * starts.  If the application is being loaded by an es6 module loader, this\n * is the entry point.\n *\n * Point Webpack or SystemJS to this file.\n *\n * This module imports all the different parts of the application which registers them with angular.\n * - Submodules\n *   - States\n *   - Components\n *   - Directives\n *   - Services\n *   - Filters\n *   - Run and Config blocks\n *     - Transition Hooks\n * - 3rd party Libraries and angular1 module\n */\n\n\n// import all the app sub modules\n// Each module registers it states/services/components, with the `ngmodule`\nimport \"../global/global.module\";\nimport \"../main/main.module\";\nimport \"../contacts/contacts.module\";\nimport \"../mymessages/mymessages.module\";\nimport \"../prefs/prefs.module\";\n\n// Google analytics\nimport '../util/ga';\n\n\n\n// WEBPACK FOOTER //\n// ./app/bootstrap/bootstrap.js","/**\n * This service stores and retrieves user preferences in session storage\n */\nexport class AppConfig {\n  constructor() {\n    this.sort = '+date';\n    this.emailAddress = undefined;\n    this.restDelay = 100;\n    this.load();\n  }\n\n  load() {\n    try {\n      return angular.extend(this, angular.fromJson(sessionStorage.getItem(\"appConfig\")))\n    } catch (Error) { }\n\n    return this;\n  }\n\n  save() {\n    sessionStorage.setItem(\"appConfig\", angular.toJson(angular.extend({}, this)));\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/appConfig.service.js","/**\n * This service emulates an Authentication Service.\n */\nexport class AuthService {\n  constructor(AppConfig, $q, $timeout) {\n    this.AppConfig = AppConfig;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.usernames = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n  }\n\n  /**\n   * Returns true if the user is currently authenticated, else false\n   */\n  isAuthenticated() {\n    return !!this.AppConfig.emailAddress;\n  }\n\n  /**\n   * Fake authentication function that returns a promise that is either resolved or rejected.\n   *\n   * Given a username and password, checks that the username matches one of the known\n   * usernames (this.usernames), and that the password matches 'password'.\n   *\n   * Delays 800ms to simulate an async REST API delay.\n   */\n  authenticate(username, password) {\n    let { $timeout, $q, AppConfig } = this;\n\n    // checks if the username is one of the known usernames, and the password is 'password'\n    const checkCredentials = () => $q((resolve, reject) => {\n      var validUsername = this.usernames.indexOf(username) !== -1;\n      var validPassword = password === 'password';\n\n      return (validUsername && validPassword) ? resolve(username) : reject(\"Invalid username or password\");\n    });\n\n    return $timeout(checkCredentials, 800)\n        .then((authenticatedUser) => {\n          AppConfig.emailAddress = authenticatedUser;\n          AppConfig.save()\n        });\n  }\n\n  /** Logs the current user out */\n  logout() {\n    this.AppConfig.emailAddress = undefined;\n    this.AppConfig.save();\n  }\n}\nAuthService.$inject = ['AppConfig', '$q', '$timeout'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/auth.service.js","import {SessionStorage} from \"../util/sessionStorage\"\n\n/**\n * Fake REST Services (Contacts, Folders, Messages) used in the mymessages submodule.\n *\n * Each of these APIs have:\n *\n * .all()\n * .search(exampleItem)\n * .get(id)\n * .save(item)\n * .post(item)\n * .put(item)\n * .remove(item)\n *\n * See ../util/sessionStorage.js for more details, if curious\n */\n\n/** A fake Contacts REST client API */\nexport class Contacts extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/V1g6UwwGx\n    super($http, $timeout, $q, \"contacts\", \"data/contacts.json\", AppConfig);\n  }\n}\nContacts.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Folders REST client API */\nexport class Folders extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    super($http, $timeout, $q, 'folders', 'data/folders.json', AppConfig);\n  }\n}\nFolders.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Messages REST client API */\nexport class Messages extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/VJl5GbIze\n    super($http, $timeout, $q, 'messages', 'data/messages.json', AppConfig);\n  }\n\n  byFolder(folder) {\n    let searchObject = { folder: folder._id };\n    let toFromAttr = [\"drafts\", \"sent\"].indexOf(folder._id) !== -1 ? \"from\" : \"to\";\n    searchObject[toFromAttr] = this.AppConfig.emailAddress;\n    return this.search(searchObject);\n  }\n}\nMessages.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/dataSources.service.js","import {pushToArr, guid, setProp} from \"./util\";\n\n/**\n * This class simulates a RESTful resource, but the API calls fetch data from\n * Session Storage instead of an HTTP call.\n *\n * Once configured, it loads the initial (pristine) data from the URL provided (using HTTP).\n * It exposes GET/PUT/POST/DELETE-like API that operates on the data.  All the data is also\n * stored in Session Storage.  If any data is modified in memory, session storage is updated.\n * If the browser is refreshed, the SessionStorage object will try to fetch the existing data from\n * the session, before falling back to re-fetching the initial data using HTTP.\n *\n * For an example, please see dataSources.js\n */\nexport class SessionStorage {\n  /**\n   * Creates a new SessionStorage object\n   *\n   * @param $http Pass in the $http service\n   * @param $timeout Pass in the $timeout service\n   * @param $q Pass in the $q service\n   * @param sessionStorageKey The session storage key. The data will be stored in browser's session storage under this key.\n   * @param sourceUrl The url that contains the initial data.\n   * @param AppConfig Pass in the AppConfig object\n   */\n  constructor($http, $timeout, $q, sessionStorageKey, sourceUrl, AppConfig) {\n    let data, fromSession = sessionStorage.getItem(sessionStorageKey);\n    // A promise for *all* of the data.\n    this._data = undefined;\n\n    // For each data object, the _idProp defines which property has that object's unique identifier\n    this._idProp = \"_id\";\n\n    // A basic triple-equals equality checker for two values\n    this._eqFn = (l, r) => l[this._idProp] === r[this._idProp];\n\n    // Services required to implement the fake REST API\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.sessionStorageKey = sessionStorageKey;\n    this.AppConfig = AppConfig; // Used to get the REST latency simulator,\n\n    if (fromSession) {\n      try {\n        // Try to parse the existing data from the Session Storage API\n        data = JSON.parse(fromSession);\n      } catch (e) {\n        console.log(\"Unable to parse session messages, retrieving intial data.\");\n      }\n    }\n\n    let stripHashKey = (obj) =>\n        setProp(obj, '$$hashKey', undefined);\n\n    // Create a promise for the data; Either the existing data from session storage, or the initial data via $http request\n    this._data = (data ? $q.resolve(data) : $http.get(sourceUrl).then(resp => resp.data))\n        .then(this._commit.bind(this))\n        .then(() => JSON.parse(sessionStorage.getItem(sessionStorageKey)))\n        .then(array => array.map(stripHashKey));\n\n  }\n\n  /** Saves all the data back to the session storage */\n  _commit(data) {\n    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(data));\n    return this.$q.resolve(data);\n  }\n\n  /** Helper which simulates a delay, then provides the `thenFn` with the data */\n  all(thenFn) {\n    return this.$timeout(() => this._data, this.AppConfig.restDelay).then(thenFn);\n  }\n\n  /** Given a sample item, returns a promise for all the data for items which have the same properties as the sample */\n  search(exampleItem) {\n    let contains = (search, inString) =>\n        (\"\" + inString).indexOf(\"\" + search) !== -1;\n    let matchesExample = (example, item) =>\n        Object.keys(example).reduce((memo, key) => memo && contains(example[key], item[key]), true);\n    return this.all(items =>\n        items.filter(matchesExample.bind(null, exampleItem)));\n  }\n\n  /** Returns a promise for the item with the given identifier */\n  get(id) {\n    return this.all(items =>\n        items.find(item => item[this._idProp] === id));\n  }\n\n  /** Returns a promise to save the item.  It delegates to put() or post() if the object has or does not have an identifier set */\n  save(item) {\n    return item[this._idProp] ? this.put(item) : this.post(item);\n  }\n\n  /** Returns a promise to save (POST) a new item.   The item's identifier is auto-assigned. */\n  post(item) {\n    item[this._idProp] = guid();\n    return this.all(items => pushToArr(items, item)).then(this._commit.bind(this));\n  }\n\n  /** Returns a promise to save (PUT) an existing item. */\n  put(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items[idx] = item;\n      return this._commit(items).then(() => item);\n    });\n  }\n\n  /** Returns a promise to remove (DELETE) an item. */\n  remove(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items.splice(idx, 1);\n      return this._commit(items).then(() => item);\n    });\n  }\n}\nSessionStorage.$inject = ['$http', '$timeout', '$q', 'sessionStorageKey', 'sourceUrl', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/sessionStorage.js","dialog.$inject = ['$timeout', '$q'];\nexport function dialog($timeout, $q) {\n  return {\n    link: (scope, elem) => {\n      $timeout(() => elem.addClass('active'));\n      elem.data('promise', $q((resolve, reject) => {\n        scope.yes = () => resolve(true);\n        scope.no = () => reject(false);\n      }));\n    },\n    template: `\n      <div class=\"backdrop\"></div>\n      <div class='wrapper'>\n        <div class=\"content\">\n          <h4 ng-show=\"message\">{{message}}</h4>\n          <div ng-show=\"details\">{{details}}</div>\n    \n          <div style=\"padding-top: 1em;\">\n            <button class=\"btn btn-primary\" ng-click=\"yes()\">{{yesMsg}}</button>\n            <button class=\"btn btn-primary\" ng-click=\"no()\">{{noMsg}}</button>\n          </div>\n        </div>\n      </div>\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.directive.js","import * as angular from \"angular\";\n\nexport class LoadingIndicatorService {\n  constructor($document) {\n    let body = $document.find(\"body\");\n\n    this.showLoadingIndicator = () => {\n      body.append(angular.element('<div id=\"spinner\"><i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" aria-hidden=\"true\"></i></div>'));\n    };\n\n    this.hideLoadingIndicator = () => {\n      let spinner = document.getElementById(\"spinner\");\n      spinner.parentElement.removeChild(spinner);\n    };\n  }\n}\nLoadingIndicatorService.$inject = ['$document', '$compile', '$rootScope'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/loadingIndicator.service.js","/**\n * This run block registers a Transition Hook which protects\n * routes that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\nauthHookRunBlock.$inject = ['$transitions', 'AuthService'];\nexport function authHookRunBlock($transitions, AuthService) {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  let requiresAuthCriteria = {\n    to: (state) => state.data && state.data.requiresAuth\n  };\n\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n\n  let redirectToLogin = (transition) => {\n    let AuthService = transition.injector().get('AuthService');\n    let $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  };\n\n  // Register the \"requires auth\" hook with the TransitionsService\n  $transitions.onBefore(requiresAuthCriteria, redirectToLogin, {priority: 10});\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/requiresAuth.hook.js","/**\n * This run block registers a Transition Hook which shows a\n * Loading Indicator when a transition is in progress.\n */\nloadingIndicatorHookRunBlock.$inject = ['$transitions', 'LoadingIndicatorService'];\nexport function loadingIndicatorHookRunBlock($transitions, LoadingIndicatorService) {\n  $transitions.onStart( { /* match anything */ }, LoadingIndicatorService.showLoadingIndicator);\n  $transitions.onFinish( { /* match anything */ }, LoadingIndicatorService.hideLoadingIndicator);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/loadingIndicator.hook.js","import {appTemplate, appController} from \"./app.component\";\nimport {welcomeTemplate, welcomeController} from \"./welcome.component\";\nimport {homeTemplate} from \"./home.component\";\nimport {loginTemplate, loginController} from \"./login.component\";\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nexport const appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: 'app'\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nexport const welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: 'welcome'\n};\n\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nexport const homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: 'home'\n};\n\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nexport const loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: 'login',\n  resolve: { returnTo: returnTo }\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"home\" state.\n */\nreturnTo.$inject = ['$transition$'];\nfunction returnTo($transition$) {\n  if ($transition$.redirectedFrom() != null) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  let $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\n\n\n// Future State (Placeholder) for the contacts module\nexport const contactsFutureState = {\n  parent: 'app',\n  name: 'contacts.**',\n  url: '/contacts',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return System.import('../contacts/contacts.module').then(mod => $ocLazyLoad.load(mod.CONTACTS_MODULE))\n  }\n};\n\n// Future State (Placeholder) for the prefs module\nexport const prefsFutureState = {\n  parent: 'app',\n  name: 'prefs.**',\n  url: '/prefs',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return System.import('../prefs/prefs.module').then(mod => $ocLazyLoad.load(mod.PREFS_MODULE))\n  }\n};\n\n// Future State (Placeholder) for the mymessages module\nexport const mymessagesFutureState = {\n  parent: 'app',\n  name: 'mymessages.**',\n  url: '/mymessages',\n  lazyLoad: function(transition) {\n    const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n    return System.import('../mymessages/mymessages.module').then(mod => $ocLazyLoad.load(mod.MYMESSAGES_MODULE))\n  }\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/app.states.js","/**\n * This component renders a read only view of the details for a single contact. \n */\nexport const contactDetail = {\n  bindings: { contact: '<' },\n\n  template: `\n    <div class=\"flex-h\">\n      <div class=\"details\">\n        <h3>{{$ctrl.contact.name.first}} {{$ctrl.contact.name.last}}</h3>\n        <div><label>Company</label><div>{{$ctrl.contact.company}}</div></div>\n        <div><label>Age</label><div>{{$ctrl.contact.age}}</div></div>\n        <div><label>Phone</label><div>{{$ctrl.contact.phone}}</div></div>\n        <div><label>Email</label><div>{{$ctrl.contact.email}}</div></div>\n        <div class=\"flex-h\">\n          <label>Address</label>\n          <div>{{$ctrl.contact.address.street}}<br>\n                {{$ctrl.contact.address.city}}, {{$ctrl.contact.address.state}} {{$ctrl.contact.address.zip}}\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"flex nogrow\">\n        <img ng-src=\"{{$ctrl.contact.picture}}\"/>\n      </div>\n    </div>\n`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactDetail.component.js","/**\n * This component renders a list of contacts.\n * \n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nexport const contactList = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <ul class=\"selectlist list-unstyled flex nogrow\">\n      <li>\n        <!-- This link is a relative ui-sref to the contacts.new state. -->\n        <a ui-sref=\".new\">\n          <button class=\"btn btn-primary\">\n            <i class=\"fa fa-pencil\"></i><span>New Contact</span>\n          </button>\n        </a>\n      </li>\n  \n      <li>&nbsp;</li>\n  \n      <!-- Highlight the selected contact:\n          When the current state matches the ui-sref's state (and its parameters)\n          ui-sref-active applies the 'selected' class to the a element -->\n      <li ng-repeat=\"contact in $ctrl.contacts\">\n        <a ui-sref=\".contact({contactId: contact._id})\" ui-sref-active=\"selected\">\n          {{contact.name.first}} {{contact.name.last}}\n        </a>\n      </li>\n    </ul>\n`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactList.component.js","/**\n * This component renders the contacts submodule.\n * \n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nexport const contacts = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <div class=\"my-contacts flex-h\">\n    \n      <contact-list contacts=\"$ctrl.contacts\" class=\"flex nogrow\"></contact-list>\n    \n      <div ui-view>\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\n        <h4 style=\"margin: 1em 2em;\">Select a contact</h4>\n      </div>\n      \n    </div>`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.component.js","/**\n * This component renders details for a single contact\n * \n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\n\nexport const contactView = {\n  bindings: {contact: '<'},\n\n  template: `\n    <div class=\"contact\">\n    \n      <contact-detail contact=\"$ctrl.contact\"></contact-detail>\n      \n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\n           state with an non-url parameter, which is used as the initial message model -->\n      <button class=\"btn btn-primary\" ui-sref=\"mymessages.compose({ message: { to: $ctrl.contact.email } })\">\n        <i class=\"fa fa-envelope\"></i><span>Message</span>\n      </button>\n    \n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\n      <button class=\"btn btn-primary\" ui-sref=\".edit\">\n        <i class=\"fa fa-pencil\"></i><span>Edit Contact</span>\n      </button>\n      \n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactView.component.js","/**\n * The controller for the editContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nclass EditContactController {\n  constructor($state, DialogService, Contacts) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Contacts = Contacts;\n  }\n\n  $onInit() {\n    // Make an editable copy of the pristineContact\n    this.contact = angular.copy(this.pristineContact);\n  }\n\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n      return true;\n    }\n\n    let message = 'You have unsaved changes to this contact.';\n    let question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question);\n  }\n\n  /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n  remove(contact) {\n    this.DialogService.confirm(`Delete contact: ${contact.name.first} ${contact.name.last}`)\n        .then(() => this.Contacts.remove(contact))\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^.^\", null, { reload: true }));\n  }\n\n  /** Save the contact, then go to the grandparent state ('contacts') */\n  save(contact) {\n    this.Contacts.save(contact)\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^\", null, { reload: true }));\n  }\n}\nEditContactController.$inject = ['$state', 'DialogService', 'Contacts'];\n\n/**\n * This component edits a single contact.\n *\n * Editable fields are bound to the contact.\n * A button cancels editing and returns to the contact view by linking to the parent state using `^` relative addressing.\n * Another button saves the contact.\n * A third button deletes the bcontact.\n */\nexport const editContact =  {\n  bindings: { pristineContact: '<' },\n\n  controller: EditContactController,\n\n  template: `\n    <div class=\"contact\">\n      <div class=\"details\">\n        <div><label>First</label>   <input type=\"text\" ng-model=\"$ctrl.contact.name.first\"></div>\n        <div><label>Last</label>    <input type=\"text\" ng-model=\"$ctrl.contact.name.last\"></div>\n        <div><label>Company</label> <input type=\"text\" ng-model=\"$ctrl.contact.company\"></div>\n        <div><label>Age</label>     <input type=\"text\" ng-model=\"$ctrl.contact.age\"></div>\n        <div><label>Phone</label>   <input type=\"text\" ng-model=\"$ctrl.contact.phone\"></div>\n        <div><label>Email</label>   <input type=\"text\" ng-model=\"$ctrl.contact.email\"></div>\n        <div><label>Street</label>  <input type=\"text\" ng-model=\"$ctrl.contact.address.street\"></div>\n        <div><label>City</label>    <input type=\"text\" ng-model=\"$ctrl.contact.address.city\"> </div>\n        <div><label>State</label>   <input type=\"text\" ng-model=\"$ctrl.contact.address.state\"></div>\n        <div><label>Zip</label>     <input type=\"text\" ng-model=\"$ctrl.contact.address.zip\"></div>\n        <div><label>Image</label>   <input type=\"text\" ng-model=\"$ctrl.contact.picture\"></div>\n      </div>\n    \n      <hr>\n    \n      <div>\n        <!-- This button's ui-sref relatively targets the parent state, i.e., contacts.contact -->\n        <button class=\"btn btn-primary\" ui-sref=\"^\"><i class=\"fa fa-close\"></i><span>Cancel</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.contact)\"><i class=\"fa fa-save\"></i><span>Save</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.remove($ctrl.contact)\"><i class=\"fa fa-close\"></i><span>Delete</span></button>\n      </div>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/editContact.component.js","import \"../global/dialog.service\";\n\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nexport const contactsState = {\n  parent: 'app', // declares that 'contacts' is a child of 'app'\n  name: \"contacts\",\n  url: \"/contacts\",\n  resolve: {\n    // Resolve all the contacts.  The resolved contacts are injected into the controller.\n    contacts: ['Contacts', (Contacts) => Contacts.all()]\n  },\n  data: { requiresAuth: true },\n  deepStateRedirect: true,\n  sticky: true,\n  views: {\n    contacts: 'contacts'\n  },\n};\n\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nexport const viewContactState = {\n  name: 'contacts.contact',\n  url: '/:contactId',\n  resolve: {\n    // Resolve the contact, based on the contactId parameter value.\n    // The resolved contact is provided to the contactComponent's contact binding\n    contact: ['Contacts', '$transition$', (Contacts, $transition$) => Contacts.get($transition$.params().contactId)]\n  },\n  component: 'contactView'\n};\n\n\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nexport const editContactState = {\n  name: 'contacts.contact.edit',\n  url: '/edit',\n  views: {\n    // Relatively target the grand-parent-state's $default (unnamed) ui-view\n    // This could also have been written using ui-view@state addressing: $default@contacts\n    // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n    '^.^.$default': {\n      bindings: { pristineContact: \"contact\" },\n      component: 'editContact'\n    }\n  }\n};\n\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nexport const newContactState = {\n  name: 'contacts.new',\n  url: '/new',\n  component: 'editContact'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.states.js","/**\n * The controller for the prefs component.\n */\nclass PrefsController {\n  constructor(AppConfig) {\n    this.AppConfig = AppConfig\n  }\n\n  $onInit() {\n    this.prefs = {\n      restDelay: this.AppConfig.restDelay\n    }\n  }\n\n  /** Clear out the session storage */\n  reset() {\n    sessionStorage.clear();\n    document.location.reload(true);\n  }\n\n  /** After saving preferences to session storage, reload the entire application */\n  savePrefs() {\n    angular.extend(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\n    document.location.reload(true);\n  }\n}\nPrefsController.$inject = ['AppConfig'];\n\n/**\n * A component which shows and updates app preferences\n */\nexport const prefs = {\n  controller: PrefsController,\n\n  template: `\n    <div>\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.reset()\"><i class=\"fa fa-recycle\"></i> <span>Reset All Data</span></button>\n    </div>\n    \n    <div>\n      <label for=\"restDelay\">Simulated REST API delay (ms)</label>\n      <input type=\"text\" name=\"restDelay\" ng-model=\"$ctrl.prefs.restDelay\">\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.savePrefs()\">Save</button>\n    </div>\n`};\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.component.js","/**\n * This state allows the user to set their application preferences\n */\nexport const prefsState = {\n  parent: 'app',\n  name: 'prefs',\n  url: '/prefs',\n  component: 'prefs',\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\n  data: { requiresAuth: true }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.states.js","/**\n * The controller for the Compose component\n */\nclass ComposeController {\n  constructor($state, DialogService, AppConfig, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.AppConfig = AppConfig;\n    this.Messages = Messages;\n  }\n\n  /**\n   * Create our message's model using the current user's email address as 'message.from'\n   * Then extend it with all the properties from (non-url) state parameter 'message'.\n   * Keep two copies: the editable one and the original one.\n   * These copies are used to check if the message is dirty.\n   */\n  $onInit() {\n    this.pristineMessage = angular.extend({from: this.AppConfig.emailAddress}, this.$stateParams.message);\n    this.message = angular.copy(this.pristineMessage);\n  }\n\n  /**\n   * Checks if the edited copy and the pristine copy are identical when the state is changing.\n   * If they are not identical, the allows the user to confirm navigating away without saving.\n   */\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.pristineMessage, this.message)) {\n        return true;\n    }\n\n    var message = 'You have not saved this message.';\n    var question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question, \"Yes\", \"No\");\n  }\n\n  /**\n   * Navigates back to the previous state.\n   *\n   * - Checks the $transition$ which activated this controller for a 'from state' that isn't the implicit root state.\n   * - If there is no previous state (because the user deep-linked in, etc), then go to 'mymessages.messagelist'\n   */\n  gotoPreviousState() {\n    let $transition$ = this.$transition$;\n    let hasPrevious = !!$transition$.from().name;\n    let state = hasPrevious ? $transition$.from() : \"mymessages.messagelist\";\n    let params = hasPrevious ? $transition$.params(\"from\") : {};\n    this.$state.go(state, params);\n  };\n\n  /** \"Send\" the message (save to the 'sent' folder), and then go to the previous state */\n  send(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'sent'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  };\n\n  /** Save the message to the 'drafts' folder, and then go to the previous state */\n  save(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'drafts'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  }\n}\nComposeController.$inject = ['$state', 'DialogService', 'AppConfig', 'Messages'];\n\n/**\n * This component composes a message\n *\n * The message might be new, a saved draft, or a reply/forward.\n * A Cancel button discards the new message and returns to the previous state.\n * A Save As Draft button saves the message to the \"drafts\" folder.\n * A Send button sends the message\n */\nexport const compose = {\n  bindings: { $stateParams: '<', $transition$: '<' },\n\n  controller: ComposeController,\n\n  template: `\n    <div class=\"compose\">\n      <div class=\"header\">\n        <div class=\"flex-h\"> <label>Recipient</label> <input type=\"text\" id=\"to\" name=\"to\" ng-model=\"$ctrl.message.to\"> </div>\n        <div class=\"flex-h\"> <label>Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\" ng-model=\"$ctrl.message.subject\"> </div>\n      </div>\n    \n      <div class=\"body\">\n        <textarea name=\"body\" id=\"body\" ng-model=\"$ctrl.message.body\" cols=\"30\" rows=\"20\"></textarea>\n        \n        <div class=\"buttons\">\n          <!-- Clicking this button brings the user back to the state they came from (previous state) -->\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.gotoPreviousState()\"><i class=\"fa fa-times-circle-o\"></i><span>Cancel</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.message)\"><i class=\"fa fa-save\"></i><span>Save as Draft</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.send($ctrl.message)\"><i class=\"fa fa-paper-plane-o\"></i><span>Send</span></button>\n        </div>\n      </div>\n    </div>\n`\n};\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/compose.component.js","/**\n * Renders a list of folders\n */\nexport const folderList = {\n  bindings: {folders: '<'},\n\n  template: `\n    <!-- Renders a list of folders -->\n    <div class=\"folderlist\">\n      <ul class=\"selectlist list-unstyled\">\n  \n        <!-- Highlight the selected folder:\n            When the current state matches the ui-sref's state (and its parameters)\n            ui-sref-active applies the 'selected' class to the li element -->\n        <li class=\"folder\" ui-sref-active=\"selected\" ng-repeat=\"folder in $ctrl.folders\" >\n          <!-- This ui-sref is a relative link to the 'mymessages.messagelist' substate. It provides the\n              'folderId' parameter value from the current folder's .id property -->\n          <a ui-sref=\".messagelist({folderId: folder._id})\"><i class=\"fa\"></i>{{folder._id}}</a>\n        </li>\n      </ul>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/folderList.component.js","import {setProp} from \"../util/util\";\n\n/** Helper function to prefix a message with \"fwd: \" or \"re: \" */\nconst prefixSubject = (prefix, message) => prefix + message.subject;\n/** Helper function which quotes an email message */\nconst quoteMessage = (message) => `\n\n\n\n---------------------------------------\nOriginal message:\nFrom: ${message.from}\nDate: ${message.date}\nSubject: ${message.subject}\n\n${message.body}`;\n\n/** Helper function to make a response message object */\nconst makeResponseMsg = (subjectPrefix, origMsg) => ({\n  from: origMsg.to,\n  to: origMsg.from,\n  subject: prefixSubject(subjectPrefix, origMsg),\n  body: quoteMessage(origMsg)\n});\n\n\n/**\n * The controller for the Message component\n */\nclass MessageController {\n  constructor($state, DialogService, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Messages = Messages;\n  }\n\n  /**\n   * When the user views a message, mark it as read and save (PUT) the resource.\n   *\n   * Apply the available actions for the message, depending on the folder the message belongs to.\n   */\n  $onInit() {\n    this.message.read = true;\n    this.Messages.put(this.message);\n\n    this.actions = this.folder.actions.reduce((obj, action) => setProp(obj, action, true), {});\n  }\n\n  /**\n   * Compose a new message as a reply to this one\n   */\n  reply(message) {\n    let replyMsg = makeResponseMsg(\"Re: \", message);\n    this.$state.go('mymessages.compose', { message: replyMsg });\n  };\n\n  /**\n   * Compose a new message as a forward of this one.\n   */\n  forward(message) {\n    let fwdMsg = makeResponseMsg(\"Fwd: \", message);\n    delete fwdMsg.to;\n    this.$state.go('mymessages.compose', { message: fwdMsg });\n  };\n\n  /**\n   * Continue composing this (draft) message\n   */\n  editDraft(message) {\n    this.$state.go('mymessages.compose', { message: message });\n  };\n\n  /**\n   * Delete this message.\n   *\n   * - confirm deletion\n   * - delete the message\n   * - determine which message should be active\n   * - show that message\n   */\n  remove(message) {\n    let nextMessageId = this.nextMessageGetter(message._id);\n    let nextState = nextMessageId ? 'mymessages.messagelist.message' : 'mymessages.messagelist';\n    let params = { messageId: nextMessageId };\n\n    this.DialogService.confirm(\"Delete?\", undefined)\n        .then(() => this.Messages.remove(message))\n        .then(() => this.$state.go(nextState, params, { reload: 'mymessages.messagelist' }));\n  };\n}\nMessageController.$inject = ['$state', 'DialogService', 'Messages'];\n\n/**\n * This component renders a single message\n *\n * Buttons perform actions related to the message.\n * Buttons are shown/hidden based on the folder's context.\n * For instance, a \"draft\" message can be edited, but can't be replied to.\n */\nexport const message = {\n  bindings: { folder: '<', message: '<', nextMessageGetter: '<' },\n\n  controller: MessageController,\n\n  template: `\n    <div class=\"message\">\n    \n      <div class=\"header\">\n        <div>\n          <h4>{{$ctrl.message.subject}}</h4>\n          <h5>{{$ctrl.message.from}} <i class=\"fa fa-long-arrow-right\"></i> {{$ctrl.message.to}}</h5>\n        </div>\n    \n        <div class=\"line2\">\n          <div>{{$ctrl.message.date | date: 'longDate'}} {{$ctrl.message.date | date: 'mediumTime'}}</div>\n          <div>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.edit\" ng-click=\"$ctrl.editDraft($ctrl.message)\"><i class=\"fa fa-pencil\"></i> <span>Edit Draft</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.reply\" ng-click=\"$ctrl.reply($ctrl.message)\"><i class=\"fa fa-reply\"></i> <span>Reply</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.forward\" ng-click=\"$ctrl.forward($ctrl.message)\"><i class=\"fa fa-forward\" ></i> <span>Forward</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.delete\" ng-click=\"$ctrl.remove($ctrl.message)\"><i class=\"fa fa-close\"></i> <span>Delete</span></button>\n          </div>\n        </div>\n      </div>\n    \n      <!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. -->\n      <div class=\"body\" ng-bind-html=\"::$ctrl.message.body | messageBody\"></div>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/message.component.js","/**\n * This component renders a list of messages using the `messageTable` component\n */\nexport const messageList = {\n  bindings: { folder: '<', messages: '<' },\n  template: `\n    <div class=\"messages\">\n      <message-table columns=\"$ctrl.folder.columns\" messages=\"$ctrl.messages\"></message-table>\n    </div>\n`};\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/messageList.component.js","/**\n * The main mymessages component.\n *\n * Renders a list of folders, and has two viewports:\n * - messageList: filled with the list of messages for a folder\n * - messagecontent: filled with the contents of a single message.\n */\nexport const mymessages = {\n  bindings: {folders: '<'},\n\n  template: `\n    <div class=\"my-messages\">\n    \n      <!-- Show message folders -->\n      <folder-list folders=\"$ctrl.folders\"></folder-list>\n    \n      <!-- A named view for the list of messages in this folder.  This will be  filled in by the 'mymessages.messagelist' child state -->\n      <div ui-view=\"messagelist\" class=\"messagelist\"> </div>\n    \n    </div>\n    \n    <!-- A named ui-view for a message's contents.  The 'mymessages.messagelist.message' grandchild state plugs into this ui-view -->\n    <div ui-view=\"messagecontent\"></div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.component.js","/**\n * A component that displays a folder of messages as a table\n * \n * If a row is clicked, the details of the message is shown using a relative ui-sref to `.message`.\n * \n * ui-sref-active is used to highlight the selected row.\n * \n * Shows/hides specific columns based on the `columns` input binding.\n */\nexport const messageTable = {\n  bindings: { columns: '<', messages: '<' },\n\n  controller: messageTableController,\n\n  template: `\n    <table>\n      <thead>\n        <tr>\n          <td ng-if=\"::$ctrl.colVisible('read')\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\"     sort-messages=\"from\">Sender</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\"       sort-messages=\"to\">Recipient</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\"  sort-messages=\"subject\">Subject</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\"     sort-messages=\"date\">Date</td>\n        </tr>\n      </thead>\n  \n      <tbody>\n        <tr ng-repeat=\"message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id\"\n            ui-sref=\".message({messageId: message._id})\" ui-sref-active=\"active\">\n          <td ng-if=\"::$ctrl.colVisible('read')\"><i class=\"fa fa-circle\" style=\"font-size: 50%\" ng-show=\"!message.read\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\">{{ message.from }}</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\">{{ message.to }}</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\">{{ message.subject }}</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\">{{ message.date | date: \"yyyy-MM-dd\" }}</td>\n        </tr>\n      </tbody>\n  \n    </table>\n`};\n\nmessageTableController.$inject = ['AppConfig'];\nfunction messageTableController(AppConfig) {\n  this.AppConfig = AppConfig;\n  this.colVisible = (name) => this.columns.indexOf(name) !== -1;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/messageTable.component.js","/**\n * A directive (for a table header) which changes the app's sort order\n */\nsortMessages.$inject = ['AppConfig'];\nexport function sortMessages(AppConfig) {\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attrs) {\n      let col = attrs.sortMessages;\n      if (!col) return;\n      let chevron = angular.element(\"<i style='padding-left: 0.25em' class='fa'></i>\");\n      elem.append(chevron);\n\n      elem.on(\"click\", (evt) => AppConfig.sort = (AppConfig.sort === `+${col}`) ? `-${col}` : `+${col}`);\n      scope.$watch(() => AppConfig.sort, (newVal) => {\n        chevron.toggleClass(\"fa-sort-asc\", newVal == `+${col}`);\n        chevron.toggleClass(\"fa-sort-desc\", newVal == `-${col}`);\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/sortMessages.directive.js","/** Angular filter to format fake emails as HTML*/\nmessageBody.$inject = ['$sce'];\nexport function messageBody($sce) {\n  return (msgText = '') => $sce.trustAsHtml(msgText.split(/\\n/).map(p => `<p>${p}</p>`).join('\\n'));\n}\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/filters/messageBody.filter.js","/** Provides services related to a message list */\nexport class MessageListUI {\n  constructor($filter, AppConfig) {\n    this.$filter = $filter;\n    this.AppConfig = AppConfig;\n  }\n\n  /** This is a UI helper which finds the nearest messageId in the messages list to the messageId parameter */\n  proximalMessageId(messages, messageId) {\n    let sorted = this.$filter(\"orderBy\")(messages, this.AppConfig.sort);\n    let idx = sorted.findIndex(msg => msg._id === messageId);\n    var proximalIdx = sorted.length > idx + 1 ? idx + 1 : idx - 1;\n    return proximalIdx >= 0 ? sorted[proximalIdx]._id : undefined;\n  }\n}\nMessageListUI.$inject = ['$filter', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/services/messagesListUI.service.js","/**\n * The mymessages state. This is the main state for the mymessages submodule.\n *\n * This state shows the list of folders for the current user. It retrieves the folders from the\n * Folders service.  If a user navigates directly to this state, the state redirects to the 'mymessages.messagelist'.\n */\nexport const mymessagesState = {\n  parent: 'app',\n  name: \"mymessages\",\n  url: \"/mymessages\",\n  resolve: {\n    // All the folders are fetched from the Folders service\n    folders: ['Folders', (Folders) => Folders.all()]\n  },\n  views: {\n    mymessages: 'mymessages'\n  },\n  // Mark this state as requiring authentication.  See ../routerhooks/requiresAuth.js.\n  data: { requiresAuth: true },\n  // If mymessages state is directly activated, redirect the transition to the most recent\n  // child state that was previously activated, or 'mymessages.messagelist' (by default)\n  deepStateRedirect: {\n    default: { state: 'mymessages.messagelist' }\n  },\n  sticky: true,\n};\n\n\n/**\n * This state shows the contents (a message list) of a single folder\n */\nexport const messageListState = {\n  name: 'mymessages.messagelist',\n  url: '/:folderId',\n  // The folderId parameter is part of the URL.  This params block sets 'inbox' as the default value.\n  // If no parameter value for folderId is provided on the transition, then it will be defaulted to 'inbox'\n  params: {folderId: \"inbox\"},\n  resolve: {\n    // Fetch the current folder from the Folders service, using the folderId parameter\n    folder: ['Folders', '$stateParams', (Folders, $stateParams) => Folders.get($stateParams.folderId)],\n\n    // The resolved folder object (from the resolve above) is injected into this resolve\n    // The list of message for the folder are fetched from the Messages service\n    messages: ['Messages', 'folder', (Messages, folder) => Messages.byFolder(folder)]\n  },\n  views: {\n    // This targets the \"messagelist\" named ui-view added to the DOM in the parent state 'mymessages'\n    messagelist: 'messageList'\n  }\n};\n\n\n/**\n * This state shows the contents of a single message.\n * It also has UI to reply, forward, delete, or edit an existing draft.\n */\nexport const messageState = {\n  name: 'mymessages.messagelist.message',\n  url: '/:messageId',\n  resolve: {\n    // Fetch the message from the Messages service using the messageId parameter\n    message: ['Messages', '$stateParams', (Messages, $stateParams) => Messages.get($stateParams.messageId)],\n    // Provide the component with a function it can query that returns the closest message id\n    nextMessageGetter: ['MessageListUI', 'messages', (MessageListUI, messages) => MessageListUI.proximalMessageId.bind(MessageListUI, messages)]\n  },\n  views: {\n    // Relatively target the parent-state's parent-state's 'messagecontent' ui-view\n    // This could also have been written using ui-view@state addressing: 'messagecontent@mymessages'\n    // Or, this could also have been written using absolute ui-view addressing: '!$default.mymessages.messagecontent'\n    \"^.^.messagecontent\": 'message'\n  }\n};\n\n\n/**\n * This state allows the user to compose a new message, edit a drafted message, send a message,\n * or save an unsent message as a draft.\n *\n * This state uses view-targeting to take over the ui-view that would normally be filled by the 'mymessages' state.\n */\nexport const composeState = {\n  name: 'mymessages.compose',\n  url: '/compose',\n  // Declares that this state has a 'message' parameter, that defaults to an empty object.\n  // Note the parameter does not appear in the URL.\n  params: {\n    message: {}\n  },\n  views: {\n    // Absolutely targets the ui-view named 'mymessages' (which is nested inside an unnamed ui-view) with the 'compose' component.\n    // Absolute targeting finds the nested ui-view in the DOM, using view names.\n    '!$default.mymessages': 'compose'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.states.js","import {ngmodule} from \"../bootstrap/ngmodule\";\n\n/** Google analytics */\n\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-73329341-1', 'auto');\nga('send', 'pageview');\n\n\nngmodule.config(['$transitionsProvider', $transitionsProvider => {\n  const vpv = (vpath) =>\n      window['ga']('send', 'pageview', vpath);\n\n  const path = (trans) => {\n    const formattedRoute = trans.$to().url.format(trans.params());\n    const withSitePrefix = location.pathname + formattedRoute;\n    return `/${withSitePrefix.split('/').filter(x => x).join('/')}`;\n  };\n\n  const error = (trans) => {\n    const err = trans.error();\n    const type = err && err.hasOwnProperty('type') ? err.type : '_';\n    const message = err && err.hasOwnProperty('message') ? err.message : '_';\n    vpv(path(trans) + ';errorType=' + type + ';errorMessage=' + message);\n  };\n\n  $transitionsProvider.onSuccess({}, (trans) => vpv(path(trans)), { priority: -10000 });\n  $transitionsProvider.onError({}, (trans) => error(trans), { priority: -10000 });\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/ga.js","/**\n * This file imports the third party library dependencies, then creates the angular module \"demo\"\n * and exports it.\n */\n// External dependencies\nimport * as angular from \"angular\";\nimport uiRouter from \"@uirouter/angularjs\";\nimport { StickyStatesPlugin } from '@uirouter/sticky-states';\nimport { DSRPlugin } from '@uirouter/dsr';\nimport { visualizer } from \"@uirouter/visualizer\";\nimport ocLazyLoad from \"oclazyload\";\n\nimport { MAIN_MODULE } from '../main/main.module';\nimport { GLOBAL_MODULE } from '../global/global.module';\n\n// Create the angular module \"demo\".\n//\n// Since it is exported, other parts of the application (in other files) can then import it and register things.\n// In bootstrap.js, the module is imported, and the components, services, and states are registered.\nexport const ngmodule = angular.module(\"demo\", [\n  uiRouter,\n  ocLazyLoad,\n  MAIN_MODULE.name,\n  GLOBAL_MODULE.name,\n\n  // These modules are lazy loaded via future states in app.states.js\n  // CONTACTS_MODULE.name\n  // MYMESSAGES_MODULE.name\n  // PREFS_MODULE.name\n]);\n\nngmodule.config(['$uiRouterProvider', '$locationProvider', ($uiRouter, $locationProvider) => {\n  $locationProvider.hashPrefix('');\n  $uiRouter.plugin(StickyStatesPlugin);\n  $uiRouter.plugin(DSRPlugin);\n  // Show the UI-Router Visualizer\n  visualizer($uiRouter);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/bootstrap/ngmodule.js"],"sourceRoot":""}